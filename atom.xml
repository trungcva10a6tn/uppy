<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Uppy</title>
  <icon>https://www.gravatar.com/avatar/430a3bdebe520801a4b4c53d1c8590c5</icon>
  <subtitle>Almost as cute as a puppy</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://uppy.io/"/>
  <updated>2023-03-08T00:04:40.017Z</updated>
  <id>https://uppy.io/</id>
  
  <author>
    <name>Transloadit</name>
    <email>uppybot@uppy.io</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>üéÑ Uppy 3.1-3.3: Improved AWS S3 Multipart, Single File Mode</title>
    <link href="https://uppy.io/blog/2022/12/3.3/"/>
    <id>https://uppy.io/blog/2022/12/3.3/</id>
    <published>2022-12-23T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><img src="/images/blog/3.1-3.3/dashboard-christmas.jpg" alt=""></p><p>üéÖüê∂ Ho-ho-ho, we are about to wrap up another year for Uppy! Three <code>minor</code> releases ago we‚Äôve introduced Uppy 3.0. It‚Äôs time to give you an update on what‚Äôs been cooking in the Uppy-Transloadit headquarters (besides cranberry sauce) for the past couple of months.</p><p>In short: AWS S3 Multipart stability improvements, Single File Mode for the Dashboard, more tests and bugfixes, new locales.</p><a id="more"></a><h2 id="Safer-AWS-S3-Multipart-uploads-on-slow-connections"><a href="#Safer-AWS-S3-Multipart-uploads-on-slow-connections" class="headerlink" title="Safer AWS S3 Multipart uploads on slow connections"></a>Safer AWS S3 Multipart uploads on slow connections</h2><p><code>@uppy/aws-s3-multipart</code> has been serving well for people who prefer a <em>client-to_s3</em> setup with Uppy. However, some uploads could occasionally fail in poor network conditions. It turned out, simultaneously signing and uploading many chunks at once saturated the HTTP/1.1 connection limit, which lead to signatures expiring by the time Uppy started uploading the next chunk.</p><p>We‚Äôve refactored our internal queue mechanism to sign chunks right before we begin uploading them to the remote server. When the upload is paused, the queue is emptied and re-populated again on resume. The default <code>limit</code> for this plugin has been set to <code>6</code> and the default S3 signature expiry has been lifted from <code>300</code> to <code>800</code> seconds.</p><h2 id="Single-File-Mode"><a href="#Single-File-Mode" class="headerlink" title="Single File Mode"></a>Single File Mode</h2><p>Often times people only want to upload a single file (most commonly an image) via Uppy. But the Dashboard UI is tailored to handling many files at once, and it used to display the single image as a small, sad-looking block in the corner. This ends now! (Actually, it ended a few releases ago, figure of speech).</p><img src="/images/blog/3.1-3.3/single-file-mode.jpg" class="border"><p>With only one file selected, we‚Äôll display it large and centered, and make sure to re-generate the image preview so it‚Äôs <code>600px</code> wide, looking nice and sleek on modern displays.</p><p>See <a href="https://github.com/transloadit/uppy/pull/4188" target="_blank" rel="noopener">PR #4188</a> for more screenshots.</p><h2 id="Bug-fixes-and-Upgrades"><a href="#Bug-fixes-and-Upgrades" class="headerlink" title="Bug fixes and Upgrades"></a>Bug fixes and Upgrades</h2><p>We‚Äôve upgraded Typescript to <code>v4.8</code> and Jest to <code>v29</code>, among other tools and packages.</p><p>We are now additionally testing that Uppy packages are correctly bundled with the latest Rollup, Webpack, Parcel, Vite, and ESBuild.</p><p>Notable bug fixes:</p><ul><li>XHR Upload: Queue requests for socket token for remote files</li><li>Core: Prevent crashes when a file is removed before the upload starts</li><li>Golden Retriever: Fixed upload retries</li><li>AWS S3 and XHR Upload: Fixed Cannot mark a queued request as done in MiniXHRUpload</li><li>Webcam: Set default videoConstraints</li><li>Image Editor: Fix controls in small Dashboard</li></ul><p>See the full list in the <a href="https://github.com/transloadit/uppy/blob/main/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><h2 id="Companion"><a href="#Companion" class="headerlink" title="Companion"></a>Companion</h2><p>And of course, this festive season we are not forgetting Companion under the tree:</p><ul><li>Throttle progress by time</li><li>Added workaround for S3 accelerated endpoints</li><li>Send expire info for non-multipart uploads</li><li>Send expiry time alongside S3 signed requests</li><li>Added support for AbortSignal</li><li>Prevent preflight race condition</li></ul><h2 id="Locales"><a href="#Locales" class="headerlink" title="Locales"></a>Locales</h2><p>Uzbek language pack was added, while Polish and Ukrainian language packs were updated.</p><hr><p>That‚Äôs it for our updates! Stay tuned for more in 2023 and happy holidays (if you are celebrating)! Cheers. In the meantime, we are driving home, driving home for Christmas. Yeah.</p><p><img src="/images/blog/3.1-3.3/driving-home.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;&lt;img src=&quot;/images/blog/3.1-3.3/dashboard-christmas.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;üéÖüê∂ Ho-ho-ho, we are about to wrap up another year for Uppy! Three &lt;code&gt;minor&lt;/code&gt; releases ago we‚Äôve introduced Uppy 3.0. It‚Äôs time to give you an update on what‚Äôs been cooking in the Uppy-Transloadit headquarters (besides cranberry sauce) for the past couple of months.&lt;/p&gt;
&lt;p&gt;In short: AWS S3 Multipart stability improvements, Single File Mode for the Dashboard, more tests and bugfixes, new locales.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/3.1-3.3/dashboard-christmas.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 3.0: Future-proof, conveniently easy, stable as ever</title>
    <link href="https://uppy.io/blog/2022/09/3.0/"/>
    <id>https://uppy.io/blog/2022/09/3.0/</id>
    <published>2022-09-13T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><img src="/images/blog/3.0/uppy-3-0.jpg" alt="Screenshot of Uppy 3.0.0 UI"></p><blockquote><p>For those new to Uppy, coming from Reddit, Hacker News and Product Hunt today: Uppy is a popular open source file uploader for the browser. Pick files from local disk or camera, remote sources like Instagram, Unsplash, Dropbox etc, record audio and screencasts. Crop and tweak images with the image editor plugin. Supports resumable uploads to a tus.io server, AWS S3 (and many others with similar API like DigitalOcean), multipart. <a href="https://uppy.io/examples/dashboard">Try it</a>!</p></blockquote><p>Uppy is turning three! When you‚Äôre counting in <a href="https://www.akc.org/expert-advice/health/how-to-calculate-dog-years-to-human-years/" target="_blank" rel="noopener">dog years</a> ‚Äì which we most certainly are ‚Äì that‚Äôs 29 already. An age like that signifies proper adulthood. For Uppy, this means it‚Äôs ready to stay loyal, but without the silly mistakes (read: bugs). Uppy also underwent (ESM) surgery to keep it strolling by your side in the current ecosystem, and received other behavioral improvements üê∂</p><a id="more"></a><p>TL;DR: ESM transition, native mobile camera, new Remote Sources plugin, sweeping Companion rewrite and streaming support, <code>async</code>/<code>await</code> everything, React 18 and Vue 3 support, all examples rewritten.</p><h2 id="ESM-surgery"><a href="#ESM-surgery" class="headerlink" title="ESM surgery"></a>ESM surgery</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noopener">ECMAScript Modules</a> (ESM) are the future and we‚Äôre ready to adopt it. Benefits over CommonJS include: improved security, better tree shaking, and a syntax that can be understood natively by browsers, which can greatly improve the DX if the tools are configured to take advantage of that.</p><p>Following in the footsteps of many other packages, we now only ship Uppy core and its plugins as ESM. For Uppy 2.x, we were shipping CommonJS.</p><p>If you are already using ESM or the CDN builds, nothing changes for you! If you are using CommonJS, you may have to add extra tooling for everything to work, or consider refactoring your codebase to ESM. Please refer to the <a href="https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c" target="_blank" rel="noopener">Pure ESM package gist</a> for more information and help on how to do that.</p><h2 id="Less-integration-code-with-the-new-remote-sources-preset"><a href="#Less-integration-code-with-the-new-remote-sources-preset" class="headerlink" title="Less integration code with the new remote sources preset"></a>Less integration code with the new remote sources preset</h2><p>We‚Äôve introduced a new Uppy preset plugin, <a href="/docs/remote-sources"><code>@uppy/remote-sources</code></a>, which combines Instagram, Facebook, Google Drive, Box, Unsplash, Dropbox, One Drive, Zoom and any other remote cloud sources that Uppy will support in the future. The plugin only works with Dashboard and allows you to enable all the above sources in a single line.</p><p>Before, you had to manually include every cloud provider / remote source:</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Instagram</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span><span class="token punctuation">,</span> <span class="token literal-property property">companionAllowedHosts</span><span class="token operator">:</span> <span class="token constant">COMPANION_ALLOWED_HOSTS</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">GoogleDrive</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span><span class="token punctuation">,</span> <span class="token literal-property property">companionAllowedHosts</span><span class="token operator">:</span> <span class="token constant">COMPANION_ALLOWED_HOSTS</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">OneDrive</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span><span class="token punctuation">,</span> <span class="token literal-property property">companionAllowedHosts</span><span class="token operator">:</span> <span class="token constant">COMPANION_ALLOWED_HOSTS</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Instagram</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span><span class="token punctuation">,</span> <span class="token literal-property property">companionAllowedHosts</span><span class="token operator">:</span> <span class="token constant">COMPANION_ALLOWED_HOSTS</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Facebook</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span><span class="token punctuation">,</span> <span class="token literal-property property">companionAllowedHosts</span><span class="token operator">:</span> <span class="token constant">COMPANION_ALLOWED_HOSTS</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Unsplash</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span><span class="token punctuation">,</span> <span class="token literal-property property">companionAllowedHosts</span><span class="token operator">:</span> <span class="token constant">COMPANION_ALLOWED_HOSTS</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// ...</span></pre></td></tr></table></figure><p>After:</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">RemoteSources</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token constant">COMPANION_URL</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>To get started, check out the <a href="/docs/remote-sources"><code>RemoteSources</code> docs</a>.</p><h2 id="Robodog-ends-its-service"><a href="#Robodog-ends-its-service" class="headerlink" title="Robodog ends its service"></a>Robodog ends its service</h2><p>Uppy is flexible and extensible through plugins, but the integration code could sometimes prove daunting. This is what brought <a href="/docs/robodog/">Robodog</a> to life. It served as an alternative with the same features, but with a more ergonomic and minimal API.</p><p>It did, however, come with its own set of new problems:</p><ul><li>Robodog tries to do the exact same thing as Uppy, but looks like an entirely different product.</li><li>Users are faced with a confusing choice between using Robodog or using Uppy directly.</li><li>Robodog is more ergonomic because it‚Äôs limited. When hitting such a limit, the user has to refactor everything to Uppy using plugins.</li></ul><p>This has now led us to deprecating Robodog and embracing Uppy for its strong suits: modularity and flexibility. At the same time, we‚Äôre also introducing something to take away some of the repetitive integration code: <a href="/docs/remote-sources"><code>@uppy/remote-sources</code></a>.</p><p>Are you using Robodog in your code base? You can check out the <a href="https://uppy.io/docs/migration-guides.html#Migrate-from-Robodog-to-Uppy-plugins">migration guide</a> to see how you can transition to Uppy plugins without losing functionality. We have committed ourselves to extending Robodog support for one year to give our users more time to migrate.</p><h2 id="Native-mobile-camera"><a href="#Native-mobile-camera" class="headerlink" title="Native mobile camera"></a>Native mobile camera</h2><p>As you are probably aware, Uppy‚Äôs Webcam plugin provides a nice UI for desktop devices to take pictures and record videos. Up until 3.0, the same UI was utilized on mobile as well.</p><p>Since most mobile devices have a system UI for taking pictures and recording videos ‚Äì which is usually better than any custom solution we can offer ‚Äì we‚Äôve introduced a new option called <code>mobileNativeCamera</code> for the Webcam plugin:</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Webcam</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">mobileNativeCamera</span><span class="token operator">:</span> <span class="token function">isMobile</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">tablet</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>By default, it uses the <a href="https://github.com/juliangruber/is-mobile" target="_blank" rel="noopener"><code>is-mobile</code></a> package to detect mobile devices, like smartphones and tablets, but you can manually set this option to <code>true</code> or <code>false</code> if you wish. When enabled, instead of the usual Camera/Webcam Uppy UI, users will be presented with buttons that open their device‚Äôs native camera interface:</p><p><img src="/images/blog/3.0/native-camera.jpg" alt="Uppy native camera UI"></p><p><a href="/docs/webcam/#videoConstraints"><code>videoConstraints.facingMode</code></a> is also supported by this option via the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture" target="_blank" rel="noopener"><code>capture</code></a> attribute (in the browsers and devices that respect it).</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Webcam</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">videoConstraints</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">facingMode</span><span class="token operator">:</span> <span class="token string">'user'</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>The same applies to <a href="/docs/webcam/#modes"><code>modes</code></a>, allowing you to enable only video or only photos.</p><h2 id="Devotedly-stable"><a href="#Devotedly-stable" class="headerlink" title="Devotedly stable"></a>Devotedly stable</h2><p>Since the Uppy 2.7.0 release, <strong>we‚Äôve fixed over 95 bugs!</strong> This includes fixes to bugs that made uploading less stable, documentation corrections, and dependency upgrades.</p><h2 id="Companion-turns-4-0"><a href="#Companion-turns-4-0" class="headerlink" title="Companion turns 4.0"></a>Companion turns 4.0</h2><p>Everyone‚Äôs favorite Companion also received some love.</p><h3 id="Streaming-upload"><a href="#Streaming-upload" class="headerlink" title="Streaming upload"></a>Streaming upload</h3><p>Streaming upload can now also be enabled in Companion when using Tus. This comes with greatly improved upload speeds and allows uploading up to hundreds of gigabytes without needing a large server storage. We found that this improves speeds by about 37% for a Google Drive upload of a 1 GB file (<a href="https://github.com/transloadit/uppy/pull/4046#issuecomment-1235697937" target="_blank" rel="noopener">source</a>). This feature was also available before Companion 4.0, but it didn‚Äôt work with Tus until now.</p><p>With streaming upload disabled (default), the whole file will be downloaded first. The upload will then start when the download has completely finished.</p><p>When streaming upload is enabled, Companion will start downloading the file from the provider (such as Google Drive), while at the same time starting the upload to the destination (such as Tus), and sending every chunk of data consecutively.</p><p>For more information, see the <a href="/docs/companion/">Companion docs</a>.</p><h3 id="Event-emitter"><a href="#Event-emitter" class="headerlink" title="Event emitter"></a>Event emitter</h3><p>Companion now has a server-side event emitter that can be used to detect when uploads start, finish and fail, without having to depend on the client (so it works even when users have closed their browser).</p><p>Example code:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> emitter <span class="token punctuation">}</span> <span class="token operator">=</span> companion<span class="token punctuation">.</span><span class="token method function property-access">app</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>emitter<span class="token punctuation">.</span><span class="token method function property-access">on</span><span class="token punctuation">(</span><span class="token string">'upload-start'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> token <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>  <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token string">'Upload started'</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>  <span class="token keyword">function</span> <span class="token function">onUploadEvent</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> action<span class="token punctuation">,</span> payload <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>action <span class="token operator">===</span> <span class="token string">'success'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      emitter<span class="token punctuation">.</span><span class="token method function property-access">off</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> onUploadEvent<span class="token punctuation">)</span> <span class="token comment">// avoid listener leak</span>      <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token string">'Upload finished'</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> payload<span class="token punctuation">.</span><span class="token property-access">url</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>action <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      emitter<span class="token punctuation">.</span><span class="token method function property-access">off</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> onUploadEvent<span class="token punctuation">)</span> <span class="token comment">// avoid listener leak</span>      <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">error</span><span class="token punctuation">(</span><span class="token string">'Upload failed'</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  emitter<span class="token punctuation">.</span><span class="token method function property-access">on</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> onUploadEvent<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="Internal-improvements"><a href="#Internal-improvements" class="headerlink" title="Internal improvements"></a>Internal improvements</h3><p>Companion‚Äôs internal request code and Providers have been rewritten to <code>async</code>/<code>await</code>, which has greatly simplified and reduced the amount of code. This will lead to less bugs and security issues, and make it easier to implement new custom Providers.</p><p>We have also replaced the deprecated <a href="https://github.com/request/request" target="_blank" rel="noopener"><code>request</code></a> library with <a href="https://github.com/sindresorhus/got" target="_blank" rel="noopener"><code>got</code></a>. This also removed the need for <a href="https://github.com/simov/purest" target="_blank" rel="noopener"><code>purest</code></a>.</p><h3 id="And-more"><a href="#And-more" class="headerlink" title="And more!"></a>And more!</h3><ul><li><a href="/docs/compressor">Compressor</a> is officially stable. The Compressor plugin for Uppy optimizes images (JPEG, PNG), saving on average up to 60% in size. It has proven itself through extensive battle testing.</li><li><a href="/docs/aws-s3-multipart">AWS S3 Multipart</a> also became more stable this release, as a result of us hammering out some of the last edge cases with lots of files and/or huge files.</li><li>React 18 is now supported in <a href="/docs/react"><code>@uppy/react</code></a>, Vue 3 is supported for <a href="/docs/vue"><code>@uppy/vue</code></a>, and Angular 14 for <a href="/docs/angular"><code>@uppy/angular</code></a>.</li><li>Our <a href="https://github.com/transloadit/uppy/tree/main/examples" target="_blank" rel="noopener">examples</a> have received a fresh round of updates to keep them relevant.</li></ul><hr><p><img src="/images/blog/3.0/dog-enjoys.gif" alt="Animate picture of a visibly happy dog getting a head massage"></p><p>For more details, see the full <a href="https://github.com/transloadit/uppy/blob/HEAD/CHANGELOG.md#1300" target="_blank" rel="noopener">changelog</a> and the <a href="/docs/migration-guides.html">migration guide</a>.</p><p>That‚Äôs it from us for now! As you can see, Uppy may be slowly turning into an old dog, but we‚Äôre still committed to keep teaching it new tricks. We hope you‚Äôll enjoy this latest major release, and all the features and improvements it includes. We can‚Äôt wait to hear your thoughts about it on <a href="https://twitter.com/uppy_io" target="_blank" rel="noopener">Twitter</a>!</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;&lt;img src=&quot;/images/blog/3.0/uppy-3-0.jpg&quot; alt=&quot;Screenshot of Uppy 3.0.0 UI&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For those new to Uppy, coming from Reddit, Hacker News and Product Hunt today: Uppy is a popular open source file uploader for the browser. Pick files from local disk or camera, remote sources like Instagram, Unsplash, Dropbox etc, record audio and screencasts. Crop and tweak images with the image editor plugin. Supports resumable uploads to a tus.io server, AWS S3 (and many others with similar API like DigitalOcean), multipart. &lt;a href=&quot;https://uppy.io/examples/dashboard&quot;&gt;Try it&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Uppy is turning three! When you‚Äôre counting in &lt;a href=&quot;https://www.akc.org/expert-advice/health/how-to-calculate-dog-years-to-human-years/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dog years&lt;/a&gt; ‚Äì which we most certainly are ‚Äì that‚Äôs 29 already. An age like that signifies proper adulthood. For Uppy, this means it‚Äôs ready to stay loyal, but without the silly mistakes (read: bugs). Uppy also underwent (ESM) surgery to keep it strolling by your side in the current ecosystem, and received other behavioral improvements üê∂&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/3.0/uppy-3-0.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 2.4-2.7: Image Compressor, Transloadit Rate Limiting, ESM</title>
    <link href="https://uppy.io/blog/2022/03/2.4-2.7/"/>
    <id>https://uppy.io/blog/2022/03/2.4-2.7/</id>
    <published>2022-03-11T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>We‚Äôre always looking for opportunities to teach Uppy cool new tricks, and the past few months have been no exception. Since our <a href="https://uppy.io/blog/2021/12/2.1-2.3/">most recent post</a> in December, Uppy has continued to receive a steady stream of updates. This post covers all the improvements made in Uppy versions 2.4 through 2.7. Changes and additions include: image compression, improved Transloadit rate limiting and a lighter Dashboard plugin. We‚Äôve also moved our end-to-end tests to Cypress, and are slowly converting plugins to ES modules (ESM).</p><img class="border" alt="Uppy Compressor plugin showing compressed images notification" src="/images/blog/2.4-2.7/compressor.jpg"><a id="more"></a><h2 id="Compressor"><a href="#Compressor" class="headerlink" title="Compressor"></a>Compressor</h2><p>Some of the most commonly uploaded files on the internet are images ‚Äî photos, stock images, screenshots, and documents scans. Uppy now includes a new plugin called <code>@uppy/compressor</code> that optimizes images (JPEG, PNG), saving on average up to 60% in size (roughly 18 MB for 10 images). It uses <a href="https://github.com/fengyuanchen/compressorjs" target="_blank" rel="noopener">Compressor.js</a> under the hood.</p><p><a href="https://uppy.io/docs/compressor/">Read the docs</a> and <a href="https://uppy.io/examples/dashboard/">try Compressor in action</a>.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Uppy</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Compressor</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/compressor'</span><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Compressor</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><code>@uppy/compressor</code> is also the first plugin that we are releasing as ESM, backwards compatible as CJS, to test out how this works. Please report any issues.</p><h2 id="Hosted-Companion-custom-credentials"><a href="#Hosted-Companion-custom-credentials" class="headerlink" title="Hosted Companion custom credentials"></a>Hosted Companion custom credentials</h2><p>It cannot be overstated that our <a href="https://transloadit.com/docs/sdks/uppy/" target="_blank" rel="noopener">Transloadit-hosted</a> <a href="https://uppy.io/docs/companion/">Companion Plugin</a> is the easiest secure way to allow your users pick files from cloud sources like Google Drive, Instagram, Box, etc. via Uppy. Up until now, however, that meant your users had to authenticate their cloud account with Transloadit, preventing you from showing your own logo instead. That has now been fixed! Head to <code>Transloadit Console</code> / <code>Credentials</code>, scroll down to <code>Third-party Credentials</code>, click on <code>Add new Credentials</code>, select <code>Companion OAuth</code>, and voil√†!</p><img class="border" alt="Transloadit Companion 3rd party credentials" src="/images/blog/2.4-2.7/companion-3rd-party-oauth.jpg"><p>Try it out with the <a href="https://transloadit.com/pricing/" target="_blank" rel="noopener">free Transloadit Community Plan ‚Äî 5GB / month and access to Companion</a>.</p><h2 id="Transloadit-rate-limiting"><a href="#Transloadit-rate-limiting" class="headerlink" title="Transloadit rate limiting"></a>Transloadit rate limiting</h2><p>We‚Äôve added rate limiting to Transloadit <a href="https://github.com/transloadit/uppy/pull/3429" target="_blank" rel="noopener">assembly creation and status polling</a>, and <a href="https://github.com/transloadit/uppy/pull/3394" target="_blank" rel="noopener">tus retries</a>:</p><blockquote><p>When the remote server responds with HTTP 429, all requests are paused for a while in the hope that it can resolve the rate limiting. Failed requests are now also queued up after the retry delay. Before, they were scheduled for retry without being queued up, which would sometimes end up overflowing the limit option.</p></blockquote><p>As a result of this change, uploading many files at once has become even more robust.</p><h2 id="Move-to-ESM"><a href="#Move-to-ESM" class="headerlink" title="Move to ESM"></a>Move to ESM</h2><p>The JavaScript ecosystem is moving towards ESM, and we want to follow suit. We are slowly starting to adopt ESM in Uppy packages. To do so, we integrated a plugin into our build system that transpiles ESM source code to CommonJS syntax, which is distributed with the npm package. Nothing will change on your end, though ‚Äì we know that not everyone is using tooling that support ESM, so we‚Äôre holding on to CommonJS for the time being. Our plan is to refactor all official Uppy plugins to ESM before Uppy 3.0 is released, and drop CommonJS in favor of ESM in the npm packages at that point.</p><p>For details, see <a href="https://github.com/transloadit/uppy/pull/3468" target="_blank" rel="noopener">PR 3468</a>.</p><h2 id="End-to-end-move-to-Cypress"><a href="#End-to-end-move-to-Cypress" class="headerlink" title="End to end: move to Cypress"></a>End to end: move to Cypress</h2><p>Uppy has had end to end from the start, but the developer experience was less than ideal with custom Webdriver.io + Selenium. The transition to <a href="https://github.com/transloadit/uppy/pull/3444" target="_blank" rel="noopener">Cypress</a> allows us to write tests with ease and comfort, backed by great documentation.</p><h2 id="Lighter-Bundle"><a href="#Lighter-Bundle" class="headerlink" title="Lighter Bundle"></a>Lighter Bundle</h2><p>We continue to look for ways to reduce Uppy‚Äôs bundle size and modernize our build toolchain. This time, we‚Äôve replaced the <a href="https://github.com/exif-js/exif-js" target="_blank" rel="noopener">Exifr.js</a> legacy bundle with the modern one without IE polyfills. Our Browserify bundler has been replaced with a modern and more efficient ESBuild.</p><h2 id="Companion-improvements"><a href="#Companion-improvements" class="headerlink" title="Companion improvements"></a>Companion improvements</h2><ul><li>Improved private IP check (#3403)</li><li>Implement periodic ping functionality (#3246)</li><li>Fix broken thumbnails for Box and Dropbox (#3460)</li><li>Fix unpslash author meta, sanitize metadata to strings and improve Companion tests (#3478)</li></ul><p>That‚Äôs it for today! See the full <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1300" target="_blank" rel="noopener">changelog</a> for more details.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;We‚Äôre always looking for opportunities to teach Uppy cool new tricks, and the past few months have been no exception. Since our &lt;a href=&quot;https://uppy.io/blog/2021/12/2.1-2.3/&quot;&gt;most recent post&lt;/a&gt; in December, Uppy has continued to receive a steady stream of updates. This post covers all the improvements made in Uppy versions 2.4 through 2.7. Changes and additions include: image compression, improved Transloadit rate limiting and a lighter Dashboard plugin. We‚Äôve also moved our end-to-end tests to Cypress, and are slowly converting plugins to ES modules (ESM).&lt;/p&gt;
&lt;img class=&quot;border&quot; alt=&quot;Uppy Compressor plugin showing compressed images notification&quot; src=&quot;/images/blog/2.4-2.7/compressor.jpg&quot;&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/2.4-2.7/compressor.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>üéÑ Uppy 2.1-2.3: Audio plugin, fast and efficient streaming for Companion, production-ready Unsplash, and more</title>
    <link href="https://uppy.io/blog/2021/12/2.1-2.3/"/>
    <id>https://uppy.io/blog/2021/12/2.1-2.3/</id>
    <published>2021-12-15T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<!--retext-simplify ignore very--><html><head></head><body><p>Last Christmas, we gave you <a href="https://uppy.io/blog/2020/12/1.24/">Uppy 1.24</a>, but this very next year, we‚Äôll take it away (since it‚Äôs outdated by now) and give you a brand-new Uppy 2.3 üéÅ!</p><p>After the <a href="https://uppy.io/blog/2021/08/2.0/">release</a> of our latest major version, 2.0.0, we‚Äôve been busy with many things. First of all is the long-awaited Audio plugin to record and upload live audio directly. We then worked on adding a fast and efficient streaming interface to Companion and made Unsplash production ready. Housekeeping was also part of the job: we made Status Bar improvements, moved from npm to Yarn 3, did some refactoring, and updated dependencies.</p><p>Last but not least, we got the issue count down from around 110 since 2.0.0 to around 45 now.</p><a id="more"></a><h2 id="Audio-plugin"><a href="#Audio-plugin" class="headerlink" title="Audio plugin"></a>Audio plugin</h2><p>Uppy now has a new <code>@uppy/audio</code> plugin for recording audio memos, sounds, jingling bells, Christmas carols, and all your holiday cheer. Check it out on the <a href="https://uppy.io/examples/dashboard/">demo page</a>.</p><video alt="Audio plugin demo" muted="" autoplay="" loop="">  <source src="/images/blog/2.1-2.3/audio-demo.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/2.1-2.3/audio-demo.mp4</video><h2 id="uppy-unsplash-is-now-production-ready"><a href="#uppy-unsplash-is-now-production-ready" class="headerlink" title="@uppy/unsplash is now production ready"></a><code>@uppy/unsplash</code> is now production ready</h2><p>The Unsplash plugin has received an update, providing attribution to the image authors and adding some polish to make it look better. Being fully brand compliant with Unsplash means it‚Äôs now production ready. You can demo the plugin on the <a href="https://uppy.io/examples/dashboard">website</a> or read the <a href="https://uppy.io/docs/unsplash/">docs</a>.</p><h2 id="New-streaming-interface-for-Companion"><a href="#New-streaming-interface-for-Companion" class="headerlink" title="New streaming interface for Companion"></a>New streaming interface for Companion</h2><p><a href="https://uppy.io/docs/companion/">Companion</a> handles the server-to-server communication between your server and file storage providers such as Google Drive, Dropbox, Instagram, and the like. This bypasses the client (so a 5 GB video isn‚Äôt eating into your users‚Äô data plans) and files are directly uploaded to the final destination. Companion is made to be effortlessly integrate-able with Uppy.</p><p>It used to work by downloading the requested file from a remote provider on the server to then start uploading it to the destination. This did the job, but it‚Äôs wasn‚Äôt ideal.</p><p>We now built streaming support into Companion, which means the download and upload can happen simultaneously. This can result in <strong>two times faster uploads</strong>, because we no longer have to wait for files to finish downloading before starting the upload process. It‚Äôs especially useful for large files and removes the need for a lot of storage space on the server, as data will be buffered in memory.</p><p>You can enable this by setting <code>streamingUpload</code> in the Companion <a href="https://uppy.io/docs/companion/#Options">options</a>.</p><p><strong>NOTE:</strong> Streaming is turned off by default. Do not turn it on yet if you‚Äôre using TUS for uploads, due to <a href="https://github.com/tus/tus-js-client/issues/275" target="_blank" rel="noopener">this tus-js-client bug</a>.</p><p>Interested in using Companion? You can use Transloadit-hosted Companion on every <a href="https://transloadit.com/pricing/" target="_blank" rel="noopener">Plan</a>.</p><h2 id="Status-Bar-error-state-improvements"><a href="#Status-Bar-error-state-improvements" class="headerlink" title="Status Bar error state improvements"></a>Status Bar error state improvements</h2><p>The Status Bar plugin would get confused about upload errors in Uppy, and we‚Äôve addressed this:</p><ul><li>The error state is now shown in case of only <em>one</em> failed file instead of <em>all</em> failed files. The plugin used to get stuck in the uploading state when a single file failed.</li><li>Added ‚ÄúX of X files uploaded‚Äù below ‚ÄúUpload failed‚Äù for extra context.</li><li>Improved the error details button styling in the Status Bar and the file info card.</li><li>Status Bar state is set to complete if the user manually removes the failed files.</li></ul><p><img src="/images/blog/2.1-2.3/status-bar-improvements.jpg" alt="status bar improvements screenshot"></p><h2 id="Internal-housekeeping"><a href="#Internal-housekeeping" class="headerlink" title="Internal housekeeping"></a>Internal housekeeping</h2><h3 id="Yarn-v3-instead-of-npm"><a href="#Yarn-v3-instead-of-npm" class="headerlink" title="Yarn v3 instead of npm"></a>Yarn v3 instead of npm</h3><p>We‚Äôve switched the Uppy repo to Yarn 3 to improve package install performance. With our complex dependency graph and over thirty packages in a monorepo, we are seeing install times reduced by more than a few minutes!</p><p>We are using <a href="https://github.com/nodejs/corepack" target="_blank" rel="noopener">Corepack</a> to make sure all Uppy contributors are using the same version of Yarn. If you are an Uppy contributor, please run the following commands to enable Corepack:</p><figure class="highlight sh"><table><tr><td class="code"><pre>corepack <span class="token parameter variable">-v</span> <span class="token operator">||</span> <span class="token function">npm</span> i <span class="token parameter variable">-g</span> corepack <span class="token comment"># install Corepack if not already installed</span><span class="token function">yarn</span> <span class="token parameter variable">-v</span> <span class="token operator">||</span> corepack <span class="token builtin class-name">enable</span> <span class="token comment"># install Yarn through Corepack if not already installed</span><span class="token function">yarn</span> <span class="token operator">||</span> corepack <span class="token function">yarn</span> <span class="token function">install</span> <span class="token comment"># install npm dependencies using yarn</span></pre></td></tr></table></figure><p><a href="https://github.com/transloadit/uppy/pull/3237" target="_blank" rel="noopener">View the PR</a></p><h3 id="Refactor-locale-scripts-amp-generate-types-and-docs"><a href="#Refactor-locale-scripts-amp-generate-types-and-docs" class="headerlink" title="Refactor locale scripts &amp; generate types and docs"></a>Refactor locale scripts &amp; generate types and docs</h3><p>This is an internal change, but important nonetheless. Our locales now live in a separate <code>locale.js</code> file for every plugin instead of <code>this.defaultLocale</code> in the class. The docs and types are automatically updated when we add or remove new locale strings.</p><p><a href="https://github.com/transloadit/uppy/pull/3276" target="_blank" rel="noopener">View the PR</a>.</p><h3 id="Automated-release-scripts"><a href="#Automated-release-scripts" class="headerlink" title="Automated release scripts"></a>Automated release scripts</h3><p>A lot of things need to happen when we‚Äôre publishing a new release. A complete redo of the automation script is now available for quick and secure releases.</p><p>Here are some highlights:</p><ul><li>Releaser runs <code>yarn release</code> and will get a series of <a href="https://github.com/terkelg/prompts" target="_blank" rel="noopener">prompts</a> to set up a release.</li><li>A changelog will be generated.</li><li>The contributions table will be updated.</li><li>GitHub Actions will create a release candidate pull request.</li><li>When approved, GitHub Actions automatically merges, publishes to the npm public registry, and creates CDN bundles.</li></ul><p><a href="https://github.com/transloadit/uppy/pull/3304" target="_blank" rel="noopener">View the PR</a>.</p><h2 id="And-more"><a href="#And-more" class="headerlink" title="And more"></a>And more</h2><ul><li>google-drive: plugin has been updated for brand compliance (#3178)</li><li>google-drive: sort Google Drive list by name #3069</li><li>status-bar: now shows all details on mobile when <code>showProgressDetails</code> is <code>true</code> (#3174)</li><li>core: move <code>Uppy</code> class to its own module (#3225)</li><li>angular: fix component crash by loosening <code>package.json</code> version constraints (#3210)</li><li>drop-target: exposed events (#3238)</li><li>companion: add <code>maxFileSize</code> option in companion for safety #3159</li><li>companion: new AWS S3 multipart presigned URL batching endpoint #3056</li><li>companion: improve CORS default headers #3167</li><li>companion: use GET instead of HEAD for <code>getURLMeta</code> for better server compatibility (especially signed S3 URLs) #3048</li><li>companion: deprecate missing <code>uploadUrls</code> option (will be required in the future) #3182</li><li>companion: close window on auth callback error and show error to user #3143</li><li>companion: cut off length of file names to avoid AWS error #3048</li><li>companion: safely escape <code>&lt;script&gt;</code> injected code in Companion‚Äôs send-token.js #3101</li><li>companion: upgrade aws-sdk #3334</li><li>companion: improve logging #3103</li><li>companion: change Provider/SearchProvider API to async and use streams instead #3159</li></ul><p>Happy Holidays from the Uppy team! Enjoy Christmas and New Year, stay safe, take a walk outside. See you in 2022!</p><!-- definitions --><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!--retext-simplify ignore very--&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Last Christmas, we gave you &lt;a href=&quot;https://uppy.io/blog/2020/12/1.24/&quot;&gt;Uppy 1.24&lt;/a&gt;, but this very next year, we‚Äôll take it away (since it‚Äôs outdated by now) and give you a brand-new Uppy 2.3 üéÅ!&lt;/p&gt;
&lt;p&gt;After the &lt;a href=&quot;https://uppy.io/blog/2021/08/2.0/&quot;&gt;release&lt;/a&gt; of our latest major version, 2.0.0, we‚Äôve been busy with many things. First of all is the long-awaited Audio plugin to record and upload live audio directly. We then worked on adding a fast and efficient streaming interface to Companion and made Unsplash production ready. Housekeeping was also part of the job: we made Status Bar improvements, moved from npm to Yarn 3, did some refactoring, and updated dependencies.&lt;/p&gt;
&lt;p&gt;Last but not least, we got the issue count down from around 110 since 2.0.0 to around 45 now.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/2.1-2.3/audio-cover.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more</title>
    <link href="https://uppy.io/blog/2021/08/2.0/"/>
    <id>https://uppy.io/blog/2021/08/2.0/</id>
    <published>2021-08-30T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Today, our tails are positively wagging with excitement about the release of Uppy 2.0! This latest version is on average 25% smaller and up to a thousand times faster, thanks to dropping support for IE11 and a lot of refactoring work. We‚Äôve upgraded many dependencies, most notably Preact 8 to Preact X, greatly improved TypeScript support and screen reader accessibility, paid technical debt, and added support for multiple messages in the Informer plugin.</p><p>Chow down on all the juicy bits and pieces inside! And make sure to <a href="https://uppy.io/examples/dashboard/">try Uppy live demo</a>.</p><p><img src="/images/blog/2.0/uppy-2-0-cover.jpg" alt="Uppy 2.0 cover banner"></p><a id="more"></a><blockquote><p>Uppy is a sleek, modular JavaScript file uploader that integrates seamlessly with any application. It is made for developers who want to provide their users with the ability to see image previews, edit metadata, pick large files directly from Dropbox, restore selected files when a tab was accidentally closed, or crop an image in-browser before sending.</p></blockquote><hr><h2 id="A-pup-no-more"><a href="#A-pup-no-more" class="headerlink" title="A pup no more"></a>A pup no more</h2><p>Ever since the first introduction of Uppy <a href="/blog/2016/07/uppy-begins/">five years ago</a> (or 36 in <a href="https://www.akc.org/expert-advice/health/how-to-calculate-dog-years-to-human-years/" target="_blank" rel="noopener">dog-years</a>), we‚Äôve always referred to our project as ‚Äòthe next open source file uploader for web browsers‚Äô. The release of <a href="/blog/2019/04/1.0/">Uppy 1.0</a> a little over two years ago, however, soon led to a steep increase in adoption. Uppy now boasts over <a href="https://github.com/transloadit/uppy/stargazers" target="_blank" rel="noopener">24,000 stargazers on GitHub</a>, making it the undisputed top dog in the world of file uploaders üåç</p><p>With that in mind, we felt it was high time to give Uppy some more much-needed trimming. We want to take this opportunity to break with the past, to make the project leaner ‚Äì and to pave the way for an even brighter future for Uppy!</p><img class="border" alt="Uppy 2.0 UI with files" src="/images/blog/2.0/uppy-ui-with-files.jpg"><h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul><li><a href="#Highlights-since-1-0">Highlights since 1.0</a></li><li><a href="#Smaller-bundles">Smaller bundles</a></li><li><a href="#Faster">Faster</a></li><li><a href="#Preact-X-and-upgraded-dependencies">Preact X and upgraded dependencies</a></li><li><a href="#Plugin-is-replaced-with-BasePlugin-and-UIPlugin"><code>Plugin</code> is replaced with <code>BasePlugin</code> and <code>UIPlugin</code></a></li><li><a href="#Strict-TypeScript-types-by-default">Strict TypeScript types by default</a></li><li><a href="#Batch-pre-signing-URLs-for-AWS-S3-Multipart">Batch pre-signing URL‚Äôs for AWS S3 Multipart</a></li><li><a href="#And-more">And more</a></li><li><a href="#What-future-remains-for-1-0?">What future remains for 1.0?</a></li><li><a href="#That‚Äôs-it">That‚Äôs it</a></li></ul><video alt="Video demo showing updated Uppy 2.0 UI" muted="" autoplay="" loop="">  <source src="/images/uppy-2-0-demo-aug-2021.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/uppy-2-0-demo-aug-2021.mp4</video><h2 id="Highlights-since-1-0"><a href="#Highlights-since-1-0" class="headerlink" title="Highlights since 1.0"></a>Highlights since 1.0</h2><p>A lot of things have happened since we released Uppy 1.0 in April of 2019. In case you have missed some of our 1.x releases, here is a small overview. We have added:</p><ul><li>Official integrations for <a href="/blog/2020/11/1.23/">Vue</a> (<a href="/blog/2021/04/1.27/">3</a>), <a href="/blog/2021/07/1.30/">Angular</a>, and <a href="/blog/2020/12/1.24/">Svelte</a></li><li><a href="/blog/2020/12/1.24/">Hooks</a> for the React integration</li><li>Support for picking files from <a href="/blog/2020/11/1.23/">Box</a>, <a href="/blog/2020/10/1.22/">Unsplash</a>, <a href="/blog/2020/04/1.10/">Facebook</a>, and <a href="/blog/2020/04/1.10/">OneDrive</a> </li><li><a href="/blog/2021/05/1.29/">‚ÄúGhost‚Äù files</a>, as part of a revamped Golden Retriever plugin, which makes recovering lost files even more intuitive</li><li>Support for 25 more languages (bringing it to a total of <a href="/docs/locales/#List-of-locale-packs">37</a>)</li><li><a href="/blog/2020/04/1.13/">Dark mode</a> </li><li>an <a href="/blog/2020/07/1.18-image-editor/">Image Editor</a></li><li>And four new core team members: <a href="https://github.com/ajkachnic" target="_blank" rel="noopener">@ajkachnic</a>, <a href="https://github.com/mifi" target="_blank" rel="noopener">@mifi</a>, <a href="https://github.com/aduh95" target="_blank" rel="noopener">@aduh95</a>, and <a href="https://github.com/murderlon" target="_blank" rel="noopener">@murderlon</a></li></ul><h2 id="Smaller-bundles"><a href="#Smaller-bundles" class="headerlink" title="Smaller bundles"></a>Smaller bundles</h2><p>With 2.0, following in the footsteps of Microsoft, we are dropping support for IE11. As a result, we are able to remove all built-in polyfills, and the new bundle size is <strong>25% smaller</strong>! If you want your app to still support older browsers (such as IE11), you may need to add the following polyfills to your bundle:</p><ul><li><a href="https://github.com/mo/abortcontroller-polyfill" target="_blank" rel="noopener">abortcontroller-polyfill</a></li><li><a href="https://github.com/zloirock/core-js" target="_blank" rel="noopener">core-js</a></li><li><a href="https://github.com/mozdevs/mediaDevices-getUserMedia-polyfill" target="_blank" rel="noopener">md-gum-polyfill</a></li><li><a href="https://github.com/que-etc/resize-observer-polyfill" target="_blank" rel="noopener">resize-observer-polyfill</a></li><li><a href="https://github.com/github/fetch" target="_blank" rel="noopener">whatwg-fetch</a></li></ul><p>If you‚Äôre using a bundler, you need import these before Uppy:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword module">import</span> <span class="token string">'core-js'</span><span class="token keyword module">import</span> <span class="token string">'whatwg-fetch'</span><span class="token keyword module">import</span> <span class="token string">'abortcontroller-polyfill/dist/polyfill-patch-fetch'</span><span class="token comment">// Order matters here: AbortController needs fetch, which needs Promise (provided by core-js).</span><span class="token keyword module">import</span> <span class="token string">'md-gum-polyfill'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">ResizeObserver</span></span> <span class="token keyword module">from</span> <span class="token string">'resize-observer-polyfill'</span><span class="token dom variable">window</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">ResizeObserver</span></span> <span class="token operator">??=</span> <span class="token maybe-class-name">ResizeObserver</span><span class="token keyword module">export</span> <span class="token exports"><span class="token punctuation">{</span> <span class="token keyword module">default</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core'</span><span class="token keyword module">export</span> <span class="token exports"><span class="token operator">*</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core'</span></pre></td></tr></table></figure><p>If you‚Äôre using Uppy from a CDN, we now provide two bundles: one for up-to-date browsers that do not include polyfills and use modern syntax, and one for legacy browsers. When migrating, be mindful about the types of browsers you want to support:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="token comment">&lt;!-- Modern browsers (recommended) --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://releases.transloadit.com/uppy/v2.0.1/uppy.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- Legacy browsers (IE11+) --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">nomodule</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://releases.transloadit.com/uppy/v2.0.1/uppy.legacy.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword module">import</span> <span class="token string">"https://releases.transloadit.com/uppy/v2.0.1/uppy.min.js"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>Please note that while you may be able to get 2.0 to work in IE11 this way, we do not officially support it anymore.</p><h2 id="Faster"><a href="#Faster" class="headerlink" title="Faster"></a>Faster</h2><p>Uppy now loads faster thanks to the decreased bundle size. With Uppy 1.0, adding many files (hundreds or even thousands) used to take dozens of seconds. Uppy 2.0 does the same thing in mere milliseconds! So, at least for this specific use case, we feel comfortable in claiming that you may see your loading times go <strong>up to a thousand times faster</strong>.</p><p>This was made possible by avoiding having to re-render all the file components whenever something changes, using <code>memoize</code> and <code>virtual-list</code> (allowing us to only render what is actually visible on screen). In addition, multiple files are now added to state in one go via <code>uppy.addFiles(Array)</code> as opposed to before, when <code>uppy.addFile(File)</code> + <code>uppy.setState</code> were being called in a loop.</p><p>Before optimizations:</p><p><img src="/images/blog/2.0/uppy-performance-before.gif" alt=""></p><p>And after:</p><p><img src="/images/blog/2.0/uppy-performance-after.gif" alt=""></p><h2 id="Preact-X-and-upgraded-dependencies"><a href="#Preact-X-and-upgraded-dependencies" class="headerlink" title="Preact X and upgraded dependencies"></a>Preact X and upgraded dependencies</h2><p>We‚Äôve upgraded almost all of Uppy‚Äôs dependencies. This includes the migration to Preact X. All plugins that depend on Preact have been upgraded from <code>8.2.9</code> to the latest version <code>10.5.13</code>. If you‚Äôd like your custom plugin to continue working with Uppy 2.0, it also needs to be using latest version of Preact.</p><p>Other notable upgrades include browserify to <code>v10</code>, typescript to <code>v4.3</code>, autoprefixer to <code>v10</code>, and lerna to <code>v4</code>.</p><h2 id="Plugin-is-replaced-with-BasePlugin-and-UIPlugin"><a href="#Plugin-is-replaced-with-BasePlugin-and-UIPlugin" class="headerlink" title="Plugin is replaced with BasePlugin and UIPlugin"></a><code>Plugin</code> is replaced with <code>BasePlugin</code> and <code>UIPlugin</code></h2><p><a href="/docs/uppy/"><code>@uppy/core</code></a> provided a <code>Plugin</code> class for creating plugins. This was used for any official plugin, but also for users who want to create their own custom plugin. However, <code>Plugin</code> always came bundled with Preact, even if the plugin itself didn‚Äôt add any UI elements.</p><p>As of Uppy 2.0.0, <code>Plugin</code> has been replaced with <code>BasePlugin</code> and <code>UIPlugin</code>. <code>BasePlugin</code> is the minimum you need to create a plugin and <code>UIPlugin</code> adds Preact for rendering user interfaces. </p><p><strong>Note:</strong> some bundlers will include <code>UIPlugin</code> (and therefore Preact) if you import from <code>@uppy/core</code>. To make sure this does not happen, you can import <code>Uppy</code> and <code>BasePlugin</code> directly: </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Uppy</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core/lib/Uppy.js'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">BasePlugin</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core/lib/BasePlugin.js'</span></pre></td></tr></table></figure><p>Interested in creating your own plugin? Check out the <a href="/docs/writing-plugins">‚Äúwriting plugins‚Äù</a> guide.</p><h2 id="Strict-TypeScript-types-by-default"><a href="#Strict-TypeScript-types-by-default" class="headerlink" title="Strict TypeScript types by default"></a>Strict TypeScript types by default</h2><p>Uppy used to have loose types by default and strict types as an opt-in. The default export was a function that returned the <code>Uppy</code> class, and the types came bundled with the default export (<code>Uppy.SomeType</code>).</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="token keyword">import</span> Uppy <span class="token keyword">from</span> <span class="token string">'@uppy/core'</span><span class="token keyword">import</span> Tus <span class="token keyword">from</span> <span class="token string">'@uppy/tus'</span><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Uppy</span><span class="token generic class-name"><span class="token operator">&lt;</span>Uppy<span class="token punctuation">.</span>StrictTypes<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Tus<span class="token punctuation">,</span> <span class="token punctuation">{</span>  invalidOption<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// this will make the compilation fail!</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Uppy is now strictly typed by default and loose types have been removed. The default export is the <code>Uppy</code> class and not a function. This means you need to call <code>Uppy</code> with the <code>new</code> keyword when initializing it.</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="token comment">// ...</span><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Tus<span class="token punctuation">,</span> <span class="token punctuation">{</span>  invalidOption<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// this will make the compilation fail!</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Uppy types are now individual exports and should be imported separately.</p><!-- eslint-disable @typescript-eslint/no-unused-vars --><figure class="highlight ts"><table><tr><td class="code"><pre><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> PluginOptions<span class="token punctuation">,</span> UIPlugin<span class="token punctuation">,</span> PluginTarget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@uppy/core'</span></pre></td></tr></table></figure><h3 id="Event-types"><a href="#Event-types" class="headerlink" title="Event types"></a>Event types</h3><p><a href="/docs/uppy/"><code>@uppy/core</code></a> provides an <a href="/docs/uppy/#uppy-on-39-event-39-action"><code>.on</code></a> method to listen to <a href="/docs/uppy/#Events">events</a>. The types for these events were loose and allowed for invalid events to be passed, such as <code>uppy.on('upload-errrOOOoooOOOOOrrrr')</code>.</p><p>Events have received a big update thanks to <a href="https://github.com/Hawxy" target="_blank" rel="noopener">@Hawxy</a>, making them more strict and accurate.</p><p>A breaking change was required to make this happen:</p><!-- eslint-disable @typescript-eslint/no-unused-vars --><figure class="highlight ts"><table><tr><td class="code"><pre><span class="token comment">// Before:</span><span class="token keyword">type</span> <span class="token class-name">Meta</span> <span class="token operator">=</span> <span class="token punctuation">{</span> myCustomMetadata<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token comment">// Invalid event</span>uppy<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">on</span><span class="token generic class-name"><span class="token operator">&lt;</span>Meta<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token string">'upload-errrOOOoooOOOOOrrrr'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>  <span class="token comment">// ...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// After:</span><span class="token comment">// Normal event signature</span>uppy<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'complete'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> successResults <span class="token operator">=</span> result<span class="token punctuation">.</span>successful<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// Custom signature</span><span class="token keyword">type</span> <span class="token class-name">Meta</span> <span class="token operator">=</span> <span class="token punctuation">{</span> myCustomMetadata<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token comment">// Notice how the custom type has now become the second argument</span>uppy<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">on</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token string">'complete'</span><span class="token punctuation">,</span> Meta<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token string">'complete'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>  <span class="token comment">// The passed type is now merged into the `meta` types.</span>  <span class="token keyword">const</span> meta <span class="token operator">=</span> result<span class="token punctuation">.</span>successful<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>myCustomMetadata<span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Plugins that add their own events can merge with existing ones in <code>@uppy/core</code> with <code>declare module '@uppy/core' { ... }</code>. This is a TypeScript pattern called <a href="https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation" target="_blank" rel="noopener">module augmentation</a>. For instance, when using <a href="/docs/dashboard/"><code>@uppy/dashboard</code></a>:</p><!-- eslint-disable @typescript-eslint/no-unused-vars --><figure class="highlight ts"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'dashboard:file-edit-start'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> fileName <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="Batch-pre-signing-URLs-for-AWS-S3-Multipart"><a href="#Batch-pre-signing-URLs-for-AWS-S3-Multipart" class="headerlink" title="Batch pre-signing URLs for AWS S3 Multipart"></a>Batch pre-signing URLs for AWS S3 Multipart</h2><p>The <a href="/docs/aws-s3-multipart/"><code>@uppy/aws-s3-multipart</code></a> plugin can be used to upload files directly to an S3 bucket using S3‚Äôs Multipart upload strategy. With this strategy, files are chopped up in parts of 5MB+ each, so they can be uploaded concurrently. It is also very reliable: if a single part fails to upload, only that 5MB chunk has to be retried.</p><p>However, in Uppy 1.0, every part had to make the trip to the server to generate a pre-signed URL. This meant that a 1GB file uploaded in 5MB chunks would require two hundred trips to the server.</p><p>As of Uppy 2.0.0, we now pre-sign URLs in batches. That same 1GB file now only takes fifty trips to the server (if the limit was four).</p><p>This is now the new default. Thanks to <a href="https://github.com/martin-brennan" target="_blank" rel="noopener">@martin-brennan</a> for this contribution!</p><p>Do you care about reliable uploads? You could also consider <a href="/docs/tus/"><code>@uppy/tus</code></a> with a self-hosted or Transloadit Tus server. Tus can resume uploads, supports smaller chunks, and offers increased upload speeds.</p><h2 id="And-more"><a href="#And-more" class="headerlink" title="And more"></a>And more</h2><ul><li>The <code>.run</code> method on the <code>Uppy</code> instance has been removed. This method was already obsolete and only logged a warning. As of this major version, it no longer exists.</li><li><a href="/docs/informer/"><code>@uppy/informer</code></a> now supports showing multiple notifications at the same time. The notifications themselves have also been improved.</li><li>Improved screen reader accessibility for checkboxes and the ‚Äòremove file‚Äô button for <a href="/docs/dashboard/"><code>@uppy/dashboard</code></a>.</li><li>Sort files and folders alphabetically in the Google Drive provider.</li><li>Polished our code base with improved eslint rules, private field methods, and other modern JavaScript features that help us write more intention-revealing and safe code.</li><li>To make Uppy more friendly towards new contributors, we have renamed our <code>master</code> branch to <code>main</code>.</li></ul><h2 id="What-future-remains-for-1-0"><a href="#What-future-remains-for-1-0" class="headerlink" title="What future remains for 1.0?"></a>What future remains for 1.0?</h2><p>Uppy 1.0 will continue to receive bug fixes for three more months (until <time datetime="2021-12-01">1 December 2021</time>), security fixes for one more year (until <time datetime="2022-09-01">1 September 2022</time>), but no more new features after today. Exceptions are unlikely, but <em>can</em> be made ‚Äì to accommodate those with commercial support contracts, for example.</p><h2 id="That‚Äôs-it"><a href="#That‚Äôs-it" class="headerlink" title="That‚Äôs it!"></a>That‚Äôs it!</h2><p>We hope you‚Äôll waste no time in taking Uppy 2.0 out for a walk. When you do, please let us know what you thought of it on <a href="https://www.reddit.com/r/javascript/comments/penbr7/uppy_file_uploader_20_smaller_and_faster_modular/" target="_blank" rel="noopener">Reddit</a>, <a href="https://news.ycombinator.com/item?id=28359287" target="_blank" rel="noopener">HN</a>, ProductHunt, or <a href="https://twitter.com/uppy_io/status/1432399270846603264" target="_blank" rel="noopener">Twitter</a>. We‚Äôre howling at the moon to hear from you!</p><!-- definitions --><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Today, our tails are positively wagging with excitement about the release of Uppy 2.0! This latest version is on average 25% smaller and up to a thousand times faster, thanks to dropping support for IE11 and a lot of refactoring work. We‚Äôve upgraded many dependencies, most notably Preact 8 to Preact X, greatly improved TypeScript support and screen reader accessibility, paid technical debt, and added support for multiple messages in the Informer plugin.&lt;/p&gt;
&lt;p&gt;Chow down on all the juicy bits and pieces inside! And make sure to &lt;a href=&quot;https://uppy.io/examples/dashboard/&quot;&gt;try Uppy live demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/2.0/uppy-2-0-cover.jpg&quot; alt=&quot;Uppy 2.0 cover banner&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/2.0/uppy-2-0-cover.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.30: Angular integration, granular image rotation, Google Drive shortcuts</title>
    <link href="https://uppy.io/blog/2021/07/1.30/"/>
    <id>https://uppy.io/blog/2021/07/1.30/</id>
    <published>2021-07-02T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.30 introduces the long-awaited Angular integration (beta), granular image rotation and Google Drive shortcuts.</p><a id="more"></a><h2 id="Angular-integration"><a href="#Angular-integration" class="headerlink" title="Angular integration"></a>Angular integration</h2><p>Uppy now has an official Angular integration! It‚Äôs still in beta, so please try it out and do let us know how we can improve through <a href="https://mobile.twitter.com/uppy_io/" target="_blank" rel="noopener">Twitter</a> or <a href="https://github.com/transloadit/uppy" target="_blank" rel="noopener">GitHub</a>. The original draft implementation was made by <a href="https://github.com/adammedford" target="_blank" rel="noopener">Adam Medford</a>, then finalized, polished and brought to release today by <a href="https://github.com/ajkachnic" target="_blank" rel="noopener">Andrew Kachnic</a> üëè</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="token function">npm</span> <span class="token function">install</span> @uppy/angular</pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="code"><pre><span class="token comment">// app.component.ts</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@angular/core'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Uppy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@uppy/core'</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>  selector<span class="token operator">:</span> <span class="token string">'app-root'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>  uppy<span class="token operator">:</span> Uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">{</span> debug<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> autoProceed<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="token comment">&lt;!--- app.component.html --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uppy-dashboard</span> <span class="token attr-name">[uppy]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>uppy<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uppy-dashboard</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>The following plugins are available as Angular component wrappers:</p><ul><li><code>&lt;uppy-dashboard /&gt;</code></li><li><code>&lt;uppy-drag-drop /&gt;</code></li><li><code>&lt;uppy-progress-bar /&gt;</code></li><li><code>&lt;uppy-status-bar /&gt;</code></li></ul><p>See the <a href="/docs/angular/">Angular docs</a> for more details.</p><h2 id="Granular-image-rotation"><a href="#Granular-image-rotation" class="headerlink" title="Granular image rotation"></a>Granular image rotation</h2><p><code>@uppy/image-editor</code> plugin received a new option <code>granularRotate: true</code> that allows for granular image rotation: be it 12¬∞ or 59¬∞ ‚Äî just adjust the slider to your liking.</p><video alt="" muted="" autoplay="" loop="">  <source src="/images/blog/1.30/granular-rotation.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/1.30/granular-rotation.mp4</video><h2 id="Google-Drive-Shortcuts"><a href="#Google-Drive-Shortcuts" class="headerlink" title="Google Drive Shortcuts"></a>Google Drive Shortcuts</h2><p>Google Drive shortcuts, much like in a desktop OS, are pointers to files or folders that can be stored in another folder or drive. Uppy now supports shortcuts ‚Äì you will see them alongside your usual files and folders.</p><p><img src="/images/blog/1.30/drive-shortcut.png" alt=""></p><p><img src="/images/blog/1.30/uppy-shortcut.png" alt=""></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/react: allowed HTML attributes to be passed via props (#2891 / @ajkachnic)</li><li>@uppy/drag-drop: Expose drag-drop events (#2914 / @Murderlon)</li><li>@uppy/companion: add <code>logClientVersion</code> option (#2855 / @mifi)</li><li>build: Fix eslint uppy package imports (#2915 / @Murderlon)</li></ul><p>See the <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1300" target="_blank" rel="noopener">changelog</a> for more details.</p><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p><a class="TryButton" href="https://releases.transloadit.com/uppy/v1.29.1/uppy-v1.30.0.zip" target="_blank" rel="noopener">Download Uppy 1.30 Bundle</a></p><p><small>Or <a href="https://uppy.io/docs/">include from CDN</a>. Note that it‚Äôs highly recommended to <a href="https://uppy.io/docs/plugins/#package-list">pick and choose specific Uppy plugins</a> that you need, and install them with <code>npm</code> or <code>yarn</code>. This is because the bundle includes all Uppy plugins at once.</small></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.30 introduces the long-awaited Angular integration (beta), granular image rotation and Google Drive shortcuts.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.29: Golden Retriever, disableLocalFiles, Webcam previews, uppy.logout</title>
    <link href="https://uppy.io/blog/2021/05/1.29/"/>
    <id>https://uppy.io/blog/2021/05/1.29/</id>
    <published>2021-05-31T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>In Uppy 1.29, we‚Äôve revamped the Golden Retriever plugin with support for partially recovered ‚Äúghost‚Äù files, added a <code>disableLocalFiles</code> option to the Dashboard, enabled the ability to preview webcam videos before submitting and provided an <code>uppy.logout()</code> method, along with an assortment of Companion improvements.</p><video alt="Demo of Uppy Golden Retriever file restore plugin in action" muted="" autoplay="" loop="">  <source src="/images/blog/1.29/ghosts-demo.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/1.29/ghosts-demo.mp4</video><a id="more"></a><h2 id="Golden-Retriever"><a href="#Golden-Retriever" class="headerlink" title="Golden Retriever"></a>Golden Retriever</h2><p><a href="/docs/golden-retriever/">Golden Retriever</a> (<code>@uppy/golden-retriever</code>) is Uppy‚Äôs innovative plugin that recovers users‚Äô files after an accidentally closed tab/window or a browser crash. Golden Retriever was first <a href="/blog/2017/07/golden-retriever/">introduced a few years ago</a>, during Transloadit‚Äôs company meetup in Berlin, and now it finally underwent a proper refactor.</p><p><img src="/images/blog/1.29/golden-retriever-all-recovered.png" alt=""></p><p>In this release, we‚Äôre adding support for ‚Äúghosts‚Äù ‚Äî files for which we‚Äôve restored the metadata, but were unable to recover the data blob itself (usually due to its size). In this case, users will see a ghost icon over the file and a ‚ÄúRe-select‚Äù button to pick the file again.</p><p><img src="/images/blog/1.29/golden-retriever-ghost.png" alt=""></p><p>You can try Golden Retriever in action on <a href="https://uppy.io/examples/dashboard/">the Dashboard example page</a>.</p><center><img src="/images/blog/golden-retriever/catch-fail-2.gif" alt="Golden Retriever failing to catch something" title="Good try, girl!"></center><h2 id="Dashboard-disableLocalFiles"><a href="#Dashboard-disableLocalFiles" class="headerlink" title="Dashboard: disableLocalFiles"></a>Dashboard: <code>disableLocalFiles</code></h2><p>The <code>disableLocalFiles: true</code> option will disable drag &amp; drop, and hide the ‚ÄúBrowse‚Äù and ‚ÄúMy Device‚Äù buttons, allowing only uploads from plugins, such as Webcam, Screen Capture, Google Drive or Instagram.</p><p><img src="/images/blog/1.29/disableLocalFiles.png" alt=""></p><p><a href="https://uppy.io/docs/dashboard/#disableLocalFiles">Docs: disableLocalFiles</a>.</p><h2 id="Webcam-Previews"><a href="#Webcam-Previews" class="headerlink" title="Webcam Previews"></a>Webcam Previews</h2><p>When recording a video with the <code>@uppy/webcam</code> plugin, you will now be given the opportunity to play it back and review before submitting. If you happen to not like the crab mask you‚Äôve used, you can re-record the video using a more appropriate baby Yoda or duckface mask.</p><video alt="Demo of Uppy Golden Retriever file restore plugin in action" muted="" autoplay="" loop="">  <source src="/images/blog/1.29/webcam-preview-demo.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/1.29/webcam-preview-demo.mp4</video><h2 id="uppy-logout"><a href="#uppy-logout" class="headerlink" title="uppy.logout()"></a>uppy.logout()</h2><p>When your users log out of your app, you might want to also log them out of any cloud providers they might have used through Uppy, for extra security.</p><p><code>uppy.logout()</code> calls <code>provider.logout()</code> on each remote provider plugin, like Google Drive, Instagram, Dropbox, etc.</p><p><a href="https://uppy.io/docs/uppy/#uppy-logout">Docs: uppy-logout</a></p><h2 id="Companion"><a href="#Companion" class="headerlink" title="Companion"></a>Companion</h2><ul><li>@uppy/companion-client: rethrow original error objects (#2889 / @goto-bus-stop)</li><li>Pull out metric middleware logic (#2854 / @mifi)</li><li>Smaller Heroku deployment (#2845 / @goto-bus-stop)</li><li>Bump redis from 2.8.0 to 3.1.1 (#2865 / @dependabot, @ kiloreux)</li><li>add chunkSize Companion option (#2881 / @mifi)</li><li>fix NRP TypeScript errors (#2884 / @mifi)</li><li>support relative redirect URLs in responses (#2901 / @ goto-bus-stop)</li></ul><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>core: use AggregateError when available (#2869 / @aduh95)</li><li>build: upgrade TypeScript (#2856 / @ajkachnic)</li><li>webcam: improve MIME type detection to solve issue in iOS Safari (#2851 / @dominiceden)</li></ul><p>See <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1291" target="_blank" rel="noopener">changelog</a> for details.</p><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p><a class="TryButton" href="https://releases.transloadit.com/uppy/v1.29.1/uppy-v1.29.1.zip" target="_blank" rel="noopener">Download Uppy 1.29.1</a></p><p><small>Or <a href="https://uppy.io/docs/">include from CDN</a>. Note that it‚Äôs highly recommended to <a href="https://uppy.io/docs/plugins/#package-list">pick and choose specific Uppy plugins</a> that you need, and install them with <code>npm</code> or <code>yarn</code>. This is because the bundle includes all Uppy plugins at once.</small></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;In Uppy 1.29, we‚Äôve revamped the Golden Retriever plugin with support for partially recovered ‚Äúghost‚Äù files, added a &lt;code&gt;disableLocalFiles&lt;/code&gt; option to the Dashboard, enabled the ability to preview webcam videos before submitting and provided an &lt;code&gt;uppy.logout()&lt;/code&gt; method, along with an assortment of Companion improvements.&lt;/p&gt;
&lt;video alt=&quot;Demo of Uppy Golden Retriever file restore plugin in action&quot; muted=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot;&gt;
  &lt;source src=&quot;/images/blog/1.29/ghosts-demo.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag: https://uppy.io/images/blog/1.29/ghosts-demo.mp4
&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.29/golden-retriever-all-recovered.png" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.27: Drop Target plugin, Vue 3 support, Dashboard dynamic meta fields, ‚ÄúShared with me‚Äù in Google Drive</title>
    <link href="https://uppy.io/blog/2021/04/1.27/"/>
    <id>https://uppy.io/blog/2021/04/1.27/</id>
    <published>2021-04-05T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>In Uppy 1.27 we‚Äôve added a new <code>@uppy/drop-target</code> plugin, enabled support for Vue 3, introduced dynamic <code>metaFields</code> option for Dashboard, Google Drive now lists documents that have been shared with you.</p><video alt="Demo video showing Uppy with Drop Target plugin which allows accepting drag and drop anywhere on a page" poster="/images/blog/1.26/dashboard-disabled.jpg" muted="" autoplay="" loop="">  <source src="/images/blog/1.27/drop-target.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/1.27/drop-target.mp4</video><a id="more"></a><h2 id="Drop-Target"><a href="#Drop-Target" class="headerlink" title="Drop Target"></a>Drop Target</h2><p>With <code>@uppy/drop-target</code> it is now possible to turn your whole app / page (or any other element, like <code>&lt;textarea&gt;</code>, for instance) into a drag-and-drop area:</p><p><img src="/images/blog/1.27/drop-target.jpg" alt="Uppy Dashboard UI with drop target plugin"></p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">DropTarget</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token property-access">body</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="Google-Drive-‚ÄúShared-with-me‚Äù"><a href="#Google-Drive-‚ÄúShared-with-me‚Äù" class="headerlink" title="Google Drive ‚ÄúShared with me‚Äù"></a>Google Drive ‚ÄúShared with me‚Äù</h2><p>If you connect Uppy to Google Drive, you‚Äôll now see a new virtual folder called ‚ÄúShared with me‚Äù ‚Äî there you‚Äôll find (hard to guess, I know), documents that have been shared with you.</p><p><img src="/images/blog/1.27/shared-with-me.jpg" alt="Google Drive ‚ÄúShared with me‚Äù folder"></p><p><a href="https://github.com/transloadit/uppy/pull/2758" target="_blank" rel="noopener">PR #2758</a>.</p><h2 id="Dashboard-Dynamic-metaFields"><a href="#Dashboard-Dynamic-metaFields" class="headerlink" title="Dashboard Dynamic metaFields"></a>Dashboard Dynamic <code>metaFields</code></h2><p>Sometimes you may want to show specific meta fields for certain type of files. For instance, you may want to show location and alt attribute for images. Now, instead of setting a fixed array of fields, you can pass a function that will be called for each file, returning an array of fields from it:  </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'#pick-files'</span><span class="token punctuation">,</span>  <span class="token function-variable function">metaFields</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> fields <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'File name'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>    <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token property-access">type</span><span class="token punctuation">.</span><span class="token method function property-access">startsWith</span><span class="token punctuation">(</span><span class="token string">'image/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      fields<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">'location'</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Photo Location'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>      fields<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">'alt'</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Alt text'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword control-flow">return</span> fields  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>See <a href="https://uppy.io/docs/dashboard/#metaFields">Dashboard <code>metaFields</code></a> docs for details.</p><h2 id="Vue-3"><a href="#Vue-3" class="headerlink" title="Vue 3"></a>Vue 3</h2><p><code>@uppy/vue</code> integration now supports Vue 3! This is done by checking the arguments of the <code>render</code> function and determining whether it is using Vue 2 or 3, and then returning the appropriate rendering method.</p><p><a href="https://github.com/transloadit/uppy/pull/2755" target="_blank" rel="noopener">PR #2755</a>.</p><h2 id="Companion-CORS-and-Better-Testing"><a href="#Companion-CORS-and-Better-Testing" class="headerlink" title="Companion CORS and Better Testing"></a>Companion CORS and Better Testing</h2><p>In Companion, we‚Äôve improved unit testing DX (<a href="https://github.com/transloadit/uppy/pull/2827" target="_blank" rel="noopener">#2827</a>) and switched to using the <code>cors</code> module instead of custom cors logic (<a href="https://github.com/transloadit/uppy/pull/2823" target="_blank" rel="noopener">#2823</a>).</p><p>@coreprocess submited a fix that allows Companion to serve on a subpath (<a href="https://github.com/transloadit/uppy/pull/2797" target="_blank" rel="noopener">#2797</a>), and added Redis pubsub scope setting (<a href="https://github.com/transloadit/uppy/pull/2804" target="_blank" rel="noopener">#2804</a>)!</p><h2 id="npm-7"><a href="#npm-7" class="headerlink" title="npm 7"></a>npm 7</h2><p>We‚Äôve finally upgraded our monorepo to npm 7 and <a href="https://docs.npmjs.com/cli/v7/using-npm/workspaces" target="_blank" rel="noopener">Workspaces</a>. If you are a contributor, please upgrade <code>npm install npm -g</code>, as npm 7 is now required for the Uppy repo.</p><p><a href="https://github.com/transloadit/uppy/pull/2835" target="_blank" rel="noopener">PR #2835</a></p><h2 id="New-Linter-Rules"><a href="#New-Linter-Rules" class="headerlink" title="New Linter Rules"></a>New Linter Rules</h2><p>Quite a few new rules have been added to our eslint-config, which is now mostly <code>eslint-config-transloadit</code> with some custom uppy-specific overrides.</p><p><a href="https://github.com/transloadit/uppy/pull/2796" target="_blank" rel="noopener">PR #2796</a></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/xhr-upload: Set headers just before the upload in case options changed (#2781 / @rart)</li><li>@uppy/aws-s3-multipart: Aws-s3-multipart sends outdated file info to upload-success event (#2828 / @goto-bus-stop)</li><li>@uppy/aws-s3: removeUploader triggered on uninstall (#2824 / @slawexxx44)</li><li>@uppy/webcam: Fix issue where the modes: <code>['audio-only']</code> option was ignored when getting tracks from the media stream (#2810 / @dominiceden)</li><li>website: Website improvements (#2803 / @nqst)</li></ul><p>See <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1270" target="_blank" rel="noopener">changelog</a> for details.</p><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p><a class="TryButton" href="https://releases.transloadit.com/uppy/v1.27.0/uppy-v1.27.0.zip" target="_blank" rel="noopener">Download Uppy 1.27.0</a></p><p><small>Or <a href="https://uppy.io/docs/">include from CDN</a>. Note that it‚Äôs highly recommended to <a href="https://uppy.io/docs/plugins/#package-list">pick and choose specific Uppy plugins</a> that you need, and install them with <code>npm</code> or <code>yarn</code>. This is because the bundle includes all Uppy plugins at once.</small></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;In Uppy 1.27 we‚Äôve added a new &lt;code&gt;@uppy/drop-target&lt;/code&gt; plugin, enabled support for Vue 3, introduced dynamic &lt;code&gt;metaFields&lt;/code&gt; option for Dashboard, Google Drive now lists documents that have been shared with you.&lt;/p&gt;
&lt;video alt=&quot;Demo video showing Uppy with Drop Target plugin which allows accepting drag and drop anywhere on a page&quot; poster=&quot;/images/blog/1.26/dashboard-disabled.jpg&quot; muted=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot;&gt;
  &lt;source src=&quot;/images/blog/1.27/drop-target.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag: https://uppy.io/images/blog/1.27/drop-target.mp4
&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.27/drop-target.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.26: Dashboard ‚Äúdisabled‚Äù, per-file headers</title>
    <link href="https://uppy.io/blog/2021/02/1.26/"/>
    <id>https://uppy.io/blog/2021/02/1.26/</id>
    <published>2021-02-26T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.26 brings a new <code>disabled</code> option for the Dashboad, ability to set headers per file with XHR Upload, and fixes for the Transloadit plugin.</p><p><img src="/images/blog/1.26/dashboard-disabled.jpg" alt="Uppy Dashboard UI with disabled state"></p><a id="more"></a><h2 id="Dashboard-‚ÄúDisabled‚Äù"><a href="#Dashboard-‚ÄúDisabled‚Äù" class="headerlink" title="Dashboard ‚ÄúDisabled‚Äù"></a>Dashboard ‚ÄúDisabled‚Äù</h2><p>You can now specify a <code>disabled</code> option for the Dashboard, in order to make it non-interactive and grayed out. Users won‚Äôt be able to click on buttons or drop files.</p><p>This is useful when you need to confitionally enable/disable file uploading or manipulation, based on a condition in your app.</p><video alt="Demo video showing Uppy with Dashboard disabled vs enabled state" poster="/images/blog/1.26/dashboard-disabled.jpg" muted="" autoplay="" loop="">  <source src="/images/blog/1.26/dashboard-disabled-vs-enabled.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/images/blog/1.26/dashboard-disabled-vs-enabled.mp4</video><p>This option can be set on init:</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>and via API:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> dashboard <span class="token operator">=</span> uppy<span class="token punctuation">.</span><span class="token method function property-access">getPlugin</span><span class="token punctuation">(</span><span class="token string">'Dashboard'</span><span class="token punctuation">)</span>dashboard<span class="token punctuation">.</span><span class="token method function property-access">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>userNameInput<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>  dashboard<span class="token punctuation">.</span><span class="token method function property-access">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><a href="https://uppy.io/docs/dashboard/#disabled-false">See the docs</a>.</p><h2 id="XHR-Upload-Per-File-headers"><a href="#XHR-Upload-Per-File-headers" class="headerlink" title="XHR Upload Per File headers"></a>XHR Upload Per File headers</h2><p><code>@uppy/xhr-upload</code> now accept a <code>headers: (file) =&gt; {}</code> function, so you can do:</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">XHRUpload</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token function-variable function">headers</span><span class="token operator">:</span> <span class="token parameter">file</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string-property property">'authorization'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>global<span class="token punctuation">.</span><span class="token property-access">userToken</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token string-property property">'header-name'</span><span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token property-access">meta</span><span class="token punctuation">.</span><span class="token property-access">someMetaValue</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>to determine file-specific headers.</p><p>The function syntax for <code>headers</code> is only available if the <code>bundle</code> option is <code>false</code> (the default). <code>bundle</code> uploads share only one set of headers.</p><h2 id="Build-System-Improvements"><a href="#Build-System-Improvements" class="headerlink" title="Build System Improvements"></a>Build System Improvements</h2><ul><li>build: set legacy-peer-deps for npm 7. We have some peerDependency mismatches in our install tree. In npm 6 this was OK (maybe reason for a warning) but in npm 7 they hard fail the install</li><li>build: added npm version check (33e656cad32b865f960dbd88abf4d3839c8377f0 / @goto-bus-stop)</li></ul><h2 id="Transloadit-Plugin"><a href="#Transloadit-Plugin" class="headerlink" title="Transloadit Plugin"></a>Transloadit Plugin</h2><ul><li>Fixed a case where the plugin used stale file data.</li><li>Fixed polling fallback bugs.</li><li>Url concatenation is now more robust.</li></ul><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/companion: Docker tag release (#2771 / @kiloreux)</li><li>@uppy/companion: Companion should respect previously set value for Accesss-Control-Allow-Methods (#2726 / @tim-kos, @mifi, @so-steve)</li><li>@uppy/transloadit: fix polling fallback bugs (#2759 / @goto-bus-stop)</li><li>@uppy/utils: added mp4 file type support ‚Äî Safari 14.0 on Mac records audio using audio/mp4 MIME type which isn‚Äôt currently recognised by Uppy (#2753 / @dominiceden)</li></ul><p>See <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1260" target="_blank" rel="noopener">changelog</a> for details.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.26 brings a new &lt;code&gt;disabled&lt;/code&gt; option for the Dashboad, ability to set headers per file with XHR Upload, and fixes for the Transloadit plugin.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.26/dashboard-disabled.jpg&quot; alt=&quot;Uppy Dashboard UI with disabled state&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.26/dashboard-disabled.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.25: right-to-left scripts, Ukrainian translation, Companion improvements</title>
    <link href="https://uppy.io/blog/2021/01/1.25/"/>
    <id>https://uppy.io/blog/2021/01/1.25/</id>
    <published>2021-01-29T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.25 adds support for right-to-left scripts, Ukrainian translation and various improvements for Companion.</p><p>Just see how cool this looks, and read further for a video demo and some behind the scenes implementation sorcery:</p><p><img src="/images/blog/1.25/right-to-left.jpg" alt="Uppy Dashboard UI flipped for right-to-left Arabic language"></p><a id="more"></a><h2 id="Right-to-left-scripts"><a href="#Right-to-left-scripts" class="headerlink" title="Right-to-left scripts"></a>Right-to-left scripts</h2><p>Ren√©e have improved support for right-to-left scripts (such as Arabic, Farsi, Hebrew). This means that Uppy UI can now be mirrored, like how you might see on sites like <a href="https://ar.wikipedia.org/wiki/%D8%A7%D9%84%D8%B5%D9%81%D8%AD%D8%A9_%D8%A7%D9%84%D8%B1%D8%A6%D9%8A%D8%B3%D9%8A%D8%A9" target="_blank" rel="noopener">Wikipedia</a>.</p><video alt="Demo video showing Uppy with right-to-left mirrored UI" poster="/images/blog/1.25/right-to-left.jpg" muted="" autoplay="" loop="">  <source src="/images/blog/1.25/right-to-left.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/images/blog/1.25/right-to-left.mp4</video><p>HTML <code>dir</code> attribute can be used to set the direction ‚Äî any parent element of the Dashboard may have it. It‚Äôs good practice for sites to add a dir attribute on <code>&lt;html&gt;</code> element, but for backwards compatibility the Dashboard will default to left-to-right rendering.</p><p>The text direction can also be set in code using the new <code>direction</code> option for the Dashboard plugin. This is useful for the modal dashboard, which would typically be mounted in the <code>&lt;body&gt;</code> element, so there is no other parent element that you could set the <code>dir</code> attribute on (aside from <code>&lt;body&gt;</code> and <code>&lt;html&gt;</code>, which sites <em>should</em> do, but may not).</p><blockquote><p>Head over to the <a href="https://github.com/transloadit/uppy/pull/2705" target="_blank" rel="noopener">#2705 PR description and code</a>, if you are interested in how this is implemented, using new CSS properties like <code>inline-start</code> and <code>inline-end</code> with <code>postcss-logical</code> and <code>postcss-dir-pseudo-class</code> for the fallback.</p></blockquote><h2 id="Locales"><a href="#Locales" class="headerlink" title="Locales"></a>Locales</h2><p><a href="https://github.com/elkebab" target="_blank" rel="noopener">@DenysNosov</a> contributed a Ukrainian translation and fixes for Russian grammar!</p><h2 id="Integration-Guide"><a href="#Integration-Guide" class="headerlink" title="Integration Guide"></a>Integration Guide</h2><p>Andrew, who‚Äôs been on fire recently adding Vue and Svelte integrations for Uppy, has taken the time to share his experience and has written an ‚Äú<a href="/docs/contributing.html#Adding-a-new-integration">Adding a new integration</a>‚Äù guide, in case you‚Äôd like to help befriend Uppy with your favorite framework or library.</p><h2 id="Companion"><a href="#Companion" class="headerlink" title="Companion"></a>Companion</h2><ul><li>Added support for setting 3rd party credentials in runtime</li><li>Metadata is now passed to S3</li><li>Support for <code>opts.companionCookiesRule</code> rule</li><li>Delete tus error‚Äôs <code>originalRequest</code> field before propagating error</li><li>Companion now uses multi-stage docker build</li></ul><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/dashboard: emit fileId on both file-edit-start and file-edit-complete events</li><li>@uppy/box: added Box to Uppy CDN</li></ul><p>See <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1250" target="_blank" rel="noopener">changelog</a> for details.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.25 adds support for right-to-left scripts, Ukrainian translation and various improvements for Companion.&lt;/p&gt;
&lt;p&gt;Just see how cool this looks, and read further for a video demo and some behind the scenes implementation sorcery:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.25/right-to-left.jpg&quot; alt=&quot;Uppy Dashboard UI flipped for right-to-left Arabic language&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.25/right-to-left.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.24: üéÖ Happy Holidays ‚Äî Svelte, React hook, Auto Open Image Editor</title>
    <link href="https://uppy.io/blog/2020/12/1.24/"/>
    <id>https://uppy.io/blog/2020/12/1.24/</id>
    <published>2020-12-24T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.24 adds an experimental Svelte integration, additional React components, <code>autoOpenFileEditor</code> option for Dashboard, and a Norwegian (bokm√•l) translation!</p><p><img src="/images/blog/1.24/uppy-svelte.png" alt=""></p><a id="more"></a><h2 id="Svelte"><a href="#Svelte" class="headerlink" title="Svelte"></a>Svelte</h2><p>Last month we introduced the first release of official Vue.js components for Uppy. This month, we‚Äôre releasing <code>@uppy/svelte</code>: a set of components for the Svelte framework. Credit, once again, goes to <a href="https://github.com/ajkachnic" target="_blank" rel="noopener">Andrew Kachnic</a> (and special thanks to <a href="https://github.com/adammedford" target="_blank" rel="noopener">Adam Medford</a>)!</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="token function">npm</span> <span class="token function">install</span> @uppy/svelte</pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>  &lt;Dashboard    uppy={uppy}    plugins={['Webcam']}  /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Dashboard</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/svelte'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Uppy</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Webcam</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/webcam'</span><span class="token keyword">let</span> uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Webcam</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>Please see <a href="https://uppy.io/docs/svelte/">the Uppy Svelte documentation</a> for all the components.</p><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><p>The <code>@uppy/react</code> package now contains <code>&lt;FileInput /&gt;</code>, a wrapper for the <code>@uppy/file-input</code> plugin. It can render simple HTML file input or button, for situations where a flashy user interface is not desired.</p><p>Additionally, <code>useUppy()</code> is our first React Hook, made to manage the lifecycle of Uppy instances. Without this, it‚Äôs easy to accidentally create many garbage Uppy instances in modern React code.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">FileInput</span><span class="token punctuation">,</span> useUppy <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/react'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Uppy</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Tus</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/tus'</span><span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">MyUploader</span></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token function">useUppy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>    <span class="token keyword control-flow">return</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Tus</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">endpoint</span><span class="token operator">:</span> <span class="token string">'https://tusd.tusdemo.net'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// useUppy() will automatically `.close()` the Uppy instance for us when</span>  <span class="token comment">// MyUploader unmounts.</span>  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span><span class="token maybe-class-name">FileInput</span> uppy<span class="token operator">=</span><span class="token punctuation">{</span>uppy<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span></pre></td></tr></table></figure><p>This does not solve all our problems yet: dynamic configuration is still difficult to do right, due to the mismatch between React‚Äôs declarative and Uppy‚Äôs imperative style. We hope to add more documentation and tools to bridge the gap in the new year.</p><h2 id="Locales"><a href="#Locales" class="headerlink" title="Locales"></a>Locales</h2><p><a href="https://github.com/elkebab" target="_blank" rel="noopener">@elkebab</a> contributed a Norwegian translation!</p><h2 id="Auto-Open-Image-Editor"><a href="#Auto-Open-Image-Editor" class="headerlink" title="Auto Open Image Editor"></a>Auto Open Image Editor</h2><p>If you are using Image Editor plugin with the Dashboard, there‚Äôs a new option <a href="https://uppy.io/docs/dashboard/#autoOpenFileEditor-false"><code>autoOpenFileEditor</code></a>, which will open Image Editor automatically for the first image that was added to Uppy.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token literal-property property">autoOpenFileEditor</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><img class="border" src="/images/blog/1.24/image-editor-alone.jpg" alt="Uppy Image Editor in Dashboard"><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/core: new event <code>files-added</code> with all files added in one batch (#2681 / @arturi)</li><li>@uppy/utils: Add archive mime types (#2703 / @ahmedkandel)</li><li>@uppy/companion: fix crash when Dropbox API returns an error (#2687 / @ifedapoolarewaju)</li></ul><p>See <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1240" target="_blank" rel="noopener">changelog</a> for details.</p><h2 id="Happy-Holidays"><a href="#Happy-Holidays" class="headerlink" title="Happy Holidays!"></a>Happy Holidays!</h2><p>Many thanks to all our contributors and users over the past year! Uppy has gained quite a few new features and important improvements in 2020 (despite everything going on offline!). We hope to see you again soon in our first release of 2021 :)</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.24 adds an experimental Svelte integration, additional React components, &lt;code&gt;autoOpenFileEditor&lt;/code&gt; option for Dashboard, and a Norwegian (bokm√•l) translation!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.24/uppy-svelte.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.24/uppy-svelte.png" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.23: Vue.js, Box, Done button and cloud file restrictions</title>
    <link href="https://uppy.io/blog/2020/11/1.23/"/>
    <id>https://uppy.io/blog/2020/11/1.23/</id>
    <published>2020-11-30T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.23 brings Vue.js components üí•, Box file service support, a ‚ÄúDone‚Äù button for the Status Bar + Dashboard, and a better cloud file restrictions UI.</p><p><img src="/images/blog/1.23/vue-code-cover.png" alt="Vue.js Uppy code sample"></p><a id="more"></a><h2 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h2><p>We‚Äôve had <a href="https://uppy.io/docs/react/">Uppy React components</a> available for quite some time now. With the increasing popularity of Vue.js library, we‚Äôre proud to announce it‚Äôs now much easier to use <a href="https://uppy.io/docs/vue/">Uppy with Vue</a>, thanks to the amazing work by <a href="https://mobile.twitter.com/su_andrewk" target="_blank" rel="noopener">Andrew Kachnic</a>:</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="token function">npm</span> <span class="token function">install</span> @uppy/vue</pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dashboard</span> <span class="token attr-name">:uppy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uppy<span class="token punctuation">"</span></span> <span class="token attr-name">:plugins</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>['Webcam']<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Dashboard</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/vue'</span><span class="token keyword module">import</span> <span class="token string">'@uppy/core/dist/style.css'</span><span class="token keyword module">import</span> <span class="token string">'@uppy/dashboard/dist/style.css'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Uppy</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/core'</span><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Webcam</span></span> <span class="token keyword module">from</span> <span class="token string">'@uppy/webcam'</span><span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token punctuation">{</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token maybe-class-name">Dashboard</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token function-variable function">uppy</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Webcam</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">beforeDestroy</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">uppy</span><span class="token punctuation">.</span><span class="token method function property-access">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p><code>@uppy/vue</code> package provides components for all of the most popular Uppy UI plugins:</p><ul><li><code>&lt;dashboard /&gt;</code> - renders an inline <code>@uppy/dashboard</code></li><li><code>&lt;dashboard-modal /&gt;</code> - renders a <code>@uppy/dashboard</code> modal</li><li><code>&lt;drag-drop /&gt;</code> - renders a <code>@uppy/drag-drop</code> area</li><li><code>&lt;progress-bar /&gt;</code> - renders a <code>@uppy/progress-bar</code></li><li><code>&lt;status-bar /&gt;</code> - renders a <code>@uppy/status-bar</code></li></ul><p>Check out the <a href="https://uppy.io/docs/vue/">Vue documentation</a> for details.</p><p>Angular and Svelte support is on our list next.</p><h2 id="Cloud-File-Restrictions"><a href="#Cloud-File-Restrictions" class="headerlink" title="Cloud File Restrictions"></a>Cloud File Restrictions</h2><p>Dropbox, Instagram, Google Drive and other cloud providers now immediately gray out files that won‚Äôt pass Uppy restrictions set by the developer:</p><p><img src="/images/blog/1.23/restrictions-1.jpg" alt="Google Drive restrictions example"></p><p><img src="/images/blog/1.23/restrictions-2.jpg" alt="Instagram restrictions example"></p><h2 id="Done-Button"><a href="#Done-Button" class="headerlink" title="Done Button"></a>Done Button</h2><p>If <a href="https://uppy.io/docs/dashboard/#doneButtonHandler"><code>doneButtonHandler</code></a> option is passed to the Status Bar plugin, it will render a ‚ÄúDone‚Äù button in place of Pause/Resume/Cancel buttons, once the upload/encoding is done. The behaviour of the ‚ÄúDone‚Äù button is defined by the handler function ‚Äî can be used to close file picker modals or clear the upload state.</p><img class="border" alt="Status Bar Done button UI" src="/images/blog/1.23/status-bar-done.jpg"><p>By default the Done button will close the Dashboard modal window and reset Uppy state.</p><h2 id="Box-File-Provider"><a href="#Box-File-Provider" class="headerlink" title="Box File Provider"></a>Box File Provider</h2><p>Thanks to <a href="https://github.com/cartfisk" target="_blank" rel="noopener">@cartfisk</a> Uppy gains support for Box file service. You can add try it out by doing <code>npm install @uppy/box</code> and upgrading <code>@uppy/companion</code> to the latest version.</p><p>Bragging moment, here‚Äôs what <a href="https://github.com/transloadit/uppy/pull/2549#issue-491527196" target="_blank" rel="noopener">@cartfish had to say about Uppy</a>:</p><blockquote><p>Hope this is useful! Hats off to the awesome React integration, easy contribution workflow, helpful docs, and readable, clean code. 10/10.</p></blockquote><h2 id="Image-Editor-Optional-Buttons"><a href="#Image-Editor-Optional-Buttons" class="headerlink" title="Image Editor Optional Buttons"></a>Image Editor Optional Buttons</h2><p><code>@uppy/image-editor</code> plugin got support for optional buttons ‚Äî you can choose to hide or show just the ones you need ‚Äî crop, rotate, square, landscape, etc. Thanks, <a href="https://github.com/lamartire" target="_blank" rel="noopener">@lamartire</a>!</p><p>See new <a href="https://uppy.io/docs/image-editor/#Options"><code>actions</code></a> property in the Image Editor‚Äôs options.</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/robodog: Update addTransloaditPlugin.js to include missing configurable Transloadit plugin options (#2612 / @ethanwillis)</li><li>@uppy/core: add <code>uppy.opts.infoTimeout</code> (#2619 / @arturi)</li><li>@uppy/onedrive: fix OneDrive for Business (#2536 / @szh)</li><li>@uppy/image-editor: show ‚Äúedit‚Äù icon even when metaFields are not specified (#2614 / @arturi)</li><li>test: added test DeepFrozenStore with deepFreeze to try and assert that state in not mutated anywhere by accident (#2607 / @arturi)</li><li>build: switched from Travis to GitHub Actions (@goto-bus-stop)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.23 brings Vue.js components üí•, Box file service support, a ‚ÄúDone‚Äù button for the Status Bar + Dashboard, and a better cloud file restrictions UI.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.23/vue-code-cover.png&quot; alt=&quot;Vue.js Uppy code sample&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.23/vue-code-cover.png" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>üéÉ Uppy 1.22: Webcam camera source, Unsplash and maxTotalFileSize</title>
    <link href="https://uppy.io/blog/2020/10/1.22/"/>
    <id>https://uppy.io/blog/2020/10/1.22/</id>
    <published>2020-10-30T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.22 (the spooky Halloween edition) adds a new Unsplash provider, Webcam camera selector dropdown and a <code>maxTotalFileSize</code> restriction.</p><a id="more"></a><h2 id="Webcam-Camera-Source"><a href="#Webcam-Camera-Source" class="headerlink" title="Webcam Camera Source"></a>Webcam Camera Source</h2><p>If your device has multiple cameras, you can now choose which one you want to use (if you allow the <a href="https://uppy.io/docs/webcam/#showVideoSourceDropdown-false">showVideoSourceDropdown</a> option).</p><p><img src="/images/blog/1.22/webcam-dropdown-full.png" alt=""></p><p><img src="/images/blog/1.22/webcam-dropdown-short.png" alt=""></p><h2 id="maxTotalFileSize"><a href="#maxTotalFileSize" class="headerlink" title="maxTotalFileSize"></a>maxTotalFileSize</h2><p>New <code>maxTotalFileSize</code> restriction makes sure the total size of all the files selected isn‚Äôt over a certain threshold:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token literal-property property">restrictions</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">maxTotalFileSize</span><span class="token operator">:</span> <span class="token number">104857600</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="Unsplash"><a href="#Unsplash" class="headerlink" title="Unsplash"></a>Unsplash</h2><p><a href="https://unsplash.com/" target="_blank" rel="noopener">Unsplash</a> is a popular website dedicated to sharing free stock photography. With a new Uppy plugin you can search for ‚Äútrains‚Äù, ‚ÄúNew York‚Äù or ‚ÄúHarry Potter‚Äù images and upload them where needed:</p><p><img src="/images/blog/1.22/unsplash.jpg" alt=""></p><p>The plugin launches in beta, but you can already try it out by installing <code>@uppy/unsplash</code> and upgrading <code>@uppy/companion</code> to the latest version (2.1.0).</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/companion: add option to hide welcome and metrics (#2521 / @szh)</li><li>@uppy/companion: add more test cases to companion tests (#2585 / @ifedapoolarewaju)</li><li>@uppy/companion: upgrade prometheus (fixes memory leak) (#2600 / @ifedapoolarewaju)</li><li>@uppy/locales: update th_TH.js (#2571 / @dogrocker)</li><li>@uppy/locales: add missing camera translations to de_DE (#2574 / @ferdiusa)</li><li>@uppy/locales: update el_GR.js with more proper wording for Drag‚Äôn‚ÄôDrop (#2578 / @aalepis)</li><li>@uppy/core: add postprocess progress when upload success (#2535 / @mejiaej)</li><li>@uppy/react: Webpack5: Fix react imports (#2589 / @olemoign)</li><li>@uppy/thumbnail-generator: Add support for png thumbnails (#2603 / @SxDx)</li><li>website: mobile issues fixes + compact Companion migration table (#2593 / @nqst)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.22 (the spooky Halloween edition) adds a new Unsplash provider, Webcam camera selector dropdown and a &lt;code&gt;maxTotalFileSize&lt;/code&gt; restriction.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.22/unsplash.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Companion 2.0 is here</title>
    <link href="https://uppy.io/blog/2020/09/companion-2.0/"/>
    <id>https://uppy.io/blog/2020/09/companion-2.0/</id>
    <published>2020-09-09T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>We are happy to announce version 2.0 of Companion! üéâ After maintaining and improving the 1.x series for over a year, we‚Äôre now releasing a major version bump on the Companion package. The drive on this release is mainly towards fixing some terminology inconsistencies and aligning with Node.js LTS to ease the maintenance burden.</p><a id="more"></a><p>So what are the changes you can expect with Companion 2.0?</p><h2 id="Node-gt-v10"><a href="#Node-gt-v10" class="headerlink" title="Node >= v10"></a>Node &gt;= v10</h2><p>Node.js 8.x has reached end-of-life. Consequently, Companion 2.0 has dropped support for Node.js 6.x and Node.js 8.x, and now requires that you run at least Node.js 10.20.1.</p><h2 id="Renamed-provider-options"><a href="#Renamed-provider-options" class="headerlink" title="Renamed provider options"></a>Renamed provider options</h2><p>Pre 2.0, there were inconsistencies in relation to the provider names. In some places, the Google Drive provider was referred to as <em>google</em> (e.g., in <code>providerOptions</code>) while in some other places, it was referred to as <em>drive</em> (e.g., the server endpoints <code>/drive/list</code>). Companion 2.0 now consistently uses the name <em>drive</em> everywhere. Similarly, the OneDrive provider was made to have the consistent name <em>onedrive</em>.</p><h2 id="Changed-Redirect-URIs"><a href="#Changed-Redirect-URIs" class="headerlink" title="Changed Redirect URIs"></a>Changed Redirect URIs</h2><p>On the topic of consistent naming, we have also made some changes to the redirect URIs supplied during the OAuth process. For example, in the case of Google Drive, the form of the old redirect URI was <code>https://mycompanionwebsite.tld/connect/google/callback</code>. In Companion 2.0, this is now changed to <code>https://mycompanionwebsite.tld/drive/redirect</code>. This is a Breaking Change: you will need to make the corresponding changes to your redirect URIs on your Providers‚Äô API Dashboards.</p><h2 id="Compatibility-with-Uppy-1-x-client"><a href="#Compatibility-with-Uppy-1-x-client" class="headerlink" title="Compatibility with Uppy 1.x client"></a>Compatibility with Uppy 1.x client</h2><p>Companion 2.0 is compatible with any Uppy 1.x version, so you don‚Äôt have to worry about upgrading your Uppy client installations when you upgrade Companion on your server.</p><h2 id="Will-Companion-v1-still-receive-updates"><a href="#Will-Companion-v1-still-receive-updates" class="headerlink" title="Will Companion v1 still receive updates?"></a>Will Companion v1 still receive updates?</h2><p>Companion 1.x will continue to receive security patches until March 1, 2021.</p><h2 id="Migrating-from-Companion-1-x-to-2-x"><a href="#Migrating-from-Companion-1-x-to-2-x" class="headerlink" title="Migrating from Companion 1.x to 2.x"></a>Migrating from Companion 1.x to 2.x</h2><p>Given the breaking changes, we‚Äôve created a <a href="https://uppy.io/docs/companion/#Migrating-v1-to-v2">migration tutorial for upgrading from Companion v1 to v2</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;We are happy to announce version 2.0 of Companion! üéâ After maintaining and improving the 1.x series for over a year, we‚Äôre now releasing a major version bump on the Companion package. The drive on this release is mainly towards fixing some terminology inconsistencies and aligning with Node.js LTS to ease the maintenance burden.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Image Editor üåà</title>
    <link href="https://uppy.io/blog/2020/07/1.18-image-editor/"/>
    <id>https://uppy.io/blog/2020/07/1.18-image-editor/</id>
    <published>2020-07-21T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>One of the most-requested Uppy features, the <a href="/docs/image-editor/">Image Editor</a>, has landed (as beta) in 1.18.</p><video alt="Demo video showing Uppy with Image Editor plugin ‚Äî cropping, rotating and resizing images" poster="https://uppy.io/images/blog/1.18-image-editor/image-editor-dashboard.jpg" muted="" autoplay="" loop="">  <source src="/images/blog/1.18-image-editor/image-editor-demo.mp4" type="video/mp4">  Your browser does not support the video tag: https://uppy.io/images/blog/1.18-image-editor/image-editor-demo.mp4</video><a id="more"></a><p>The editor currently supports cropping, resizing, rotating, flipping and zooming your images in and out. You can try it out on <a href="/examples/dashboard/">the Dashboard example page</a>.</p><p>Under the hood we are using the excellent open source (just like Uppy itself) <a href="https://fengyuanchen.github.io/cropperjs/" target="_blank" rel="noopener">Cropper.js</a> library.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="token function">npm</span> <span class="token function">install</span> @uppy/image-editor</pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> <span class="token maybe-class-name">Uppy</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/core'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token maybe-class-name">Dashboard</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/dashboard'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token maybe-class-name">ImageEditor</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/image-editor'</span><span class="token punctuation">)</span><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">ImageEditor</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span>  <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token comment">// for the resulting image, 0.8 is a sensible default</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img src="https://uppy.io/images/blog/1.18-image-editor/image-editor-dashboard.jpg" alt="Uppy with Image Editor plugin screenshot ‚Äî cropping, rotating and resizing images"></p><p>The Image Editor plugin is meant to be used with the Dashboard UI, but in theory it can work without it, rendered somewhere else. This has not been tested, try at your own risk ;-)</p><p>You can <a href="https://uppy.io/docs/image-editor/#cropperOptions">override the options from Cropper.js</a>, too. Check out <a href="https://uppy.io/docs/image-editor">the docs for up to date options and events</a>.</p><p>Please leave your feedback <a href="https://mobile.twitter.com/uppy_io/status/1285532376249110528" target="_blank" rel="noopener">on Twitter</a>.</p><blockquote class="twitter-tweet"><p lang="en" dir="ltr">üñº One of the most-requested Uppy features, the Image Editor, for cropping, resizing, rotating, flipping and zooming your images is live now! <br><br>Check it out: <a href="https://t.co/dDXRoW0HGj" target="_blank" rel="noopener">https://t.co/dDXRoW0HGj</a> <a href="https://t.co/IhYo0gwtvP" target="_blank" rel="noopener">pic.twitter.com/IhYo0gwtvP</a></p>‚Äî Uppy (@uppy_io) <a href="https://twitter.com/uppy_io/status/1285532376249110528?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">July 21, 2020</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;One of the most-requested Uppy features, the &lt;a href=&quot;/docs/image-editor/&quot;&gt;Image Editor&lt;/a&gt;, has landed (as beta) in 1.18.&lt;/p&gt;
&lt;video alt=&quot;Demo video showing Uppy with Image Editor plugin ‚Äî cropping, rotating and resizing images&quot; poster=&quot;https://uppy.io/images/blog/1.18-image-editor/image-editor-dashboard.jpg&quot; muted=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot;&gt;
  &lt;source src=&quot;/images/blog/1.18-image-editor/image-editor-demo.mp4&quot; type=&quot;video/mp4&quot;&gt;
  Your browser does not support the video tag: https://uppy.io/images/blog/1.18-image-editor/image-editor-demo.mp4
&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.18-image-editor/image-editor-dashboard.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.11 ‚Äî 1.13: Dark Mode, custom meta fields and Google Docs in Companion</title>
    <link href="https://uppy.io/blog/2020/04/1.13/"/>
    <id>https://uppy.io/blog/2020/04/1.13/</id>
    <published>2020-04-20T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Releases 1.11 through 1.13 introduced a bunch of major new features and bugfixes. Let‚Äôs go through the main ones!</p><h2 id="Dark-mode"><a href="#Dark-mode" class="headerlink" title="Dark mode"></a>Dark mode</h2><p>A little while ago we‚Äôve <a href="https://mobile.twitter.com/uppy_io/status/1221070643543838721" target="_blank" rel="noopener">announced work in progress</a> on Dark Mode for the Dashboard. We‚Äôre happy to tell you it‚Äôs live now! You can try it out on <a href="/examples/dashboard/">the Dashboard example page</a>.</p><video alt="Demo video showing Uppy Dark Mode" muted="" autoplay="" loop="">  <source src="/images/blog/1.13/dark-mode-auto.webm" type="video/webm">  <source src="/images/blog/1.13/dark-mode-auto.mp4" type="video/mp4"></video><p>There are three options available:</p><ul><li><code>light</code> ‚Äî the default</li><li><code>dark</code></li><li><code>auto</code> ‚Äî will respect the user‚Äôs system settings and switch automatically</li></ul><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">'dark'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img src="/images/blog/1.13/uppy-dashboard-dark-mar-2020.png" alt=""></p><a id="more"></a><h2 id="Custom-meta-fields"><a href="#Custom-meta-fields" class="headerlink" title="Custom meta fields"></a>Custom meta fields</h2><p>This is big one! Thanks to @galli-leo, you can now add custom fields to the Dashboard meta editor, such as <code>&lt;input type="tel"&gt;</code>, <code>&lt;select&gt;</code> or <code>&lt;input type="checkbox"&gt;</code>, like this:</p><figure class="highlight js"><table><tr><td class="code"><pre>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">'#pick-files'</span><span class="token punctuation">,</span>  <span class="token literal-property property">metaFields</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">'caption'</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Caption'</span><span class="token punctuation">,</span> <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">'describe what the image is about'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">'public'</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Public'</span><span class="token punctuation">,</span>      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span><span class="token punctuation">,</span> h</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>        <span class="token keyword control-flow">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'checkbox'</span><span class="token punctuation">,</span>          <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">onChange</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">checked</span> <span class="token operator">?</span> <span class="token string">'on'</span> <span class="token operator">:</span> <span class="token string">'off'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token literal-property property">defaultChecked</span><span class="token operator">:</span> value <span class="token operator">===</span> <span class="token string">'on'</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>See <a href="/docs/dashboard/#metaFields">the docs</a> and <a href="https://github.com/transloadit/uppy/pull/2147" target="_blank" rel="noopener">PR #2147</a> for details.</p><h2 id="Google-Docs-support-in-Companion"><a href="#Google-Docs-support-in-Companion" class="headerlink" title="Google Docs support in Companion"></a>Google Docs support in Companion</h2><p>In the past, Uppy could already import files from Google Drive using Companion. However, files from Google Docs are not <em>really</em> files, and could not be imported. That was confusing for users: some of their files simply didn‚Äôt appear!</p><p>Companion now automagically converts GSuite documents, such as docs, spreadsheets and presentations, to <code>.docx</code>, <code>.xlsx</code> and <code>.ppt</code> files that can be opened in various applications. The current list of conversions is hardcoded to:</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="token punctuation">{</span>  <span class="token property">"application/vnd.google-apps.document"</span><span class="token operator">:</span> <span class="token string">".docx"</span><span class="token punctuation">,</span>  <span class="token property">"application/vnd.google-apps.drawing"</span><span class="token operator">:</span> <span class="token string">".png"</span><span class="token punctuation">,</span>  <span class="token property">"application/vnd.google-apps.script"</span><span class="token operator">:</span> <span class="token string">".json"</span><span class="token punctuation">,</span>  <span class="token property">"application/vnd.google-apps.spreadsheet"</span><span class="token operator">:</span> <span class="token string">".xlsx"</span><span class="token punctuation">,</span>  <span class="token property">"application/vnd.google-apps.presentation"</span><span class="token operator">:</span> <span class="token string">".ppt"</span><span class="token punctuation">}</span></pre></td></tr></table></figure><p>This may be configurable in a future release.</p><p>Note that only documents under 10MB are converted. This is a limitation set by the Google Drive API.</p><h2 id="AWS-S3"><a href="#AWS-S3" class="headerlink" title="AWS S3"></a>AWS S3</h2><p>The Aws S3 plugin now handles uploads internally, instead of deferring to XHR Upload. This change fixes many bugs with Aws S3. See <a href="https://github.com/transloadit/uppy/pull/2147" target="_blank" rel="noopener">PR #2060</a> for details.</p><h2 id="Locales"><a href="#Locales" class="headerlink" title="Locales"></a>Locales</h2><p>Polish, Croatian and Romanian language packs have been added by @alfatv, @dkisic and @akizor :tada:</p><h2 id="Exifr-in-Thumbnail-Generator"><a href="#Exifr-in-Thumbnail-Generator" class="headerlink" title="Exifr in Thumbnail Generator"></a>Exifr in Thumbnail Generator</h2><p><a href="https://github.com/MikeKovarik" target="_blank" rel="noopener">@MikeKovarik</a> created an awesome library called <a href="https://github.com/MikeKovarik/exifr" target="_blank" rel="noopener">Exifr</a>, useful for extracting EXIF image data. He was kind enough to submit a PR that replaces Uppy‚Äôs internal fork of <code>exif-js</code> with <code>exifr</code>. Our thumbnail generation is now faster and more robust! See <a href="https://github.com/transloadit/uppy/pull/2140" target="_blank" rel="noopener">PR 2140</a> for details.</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/tus, @uppy/xhr-upload: emit error when companion returns error during upload creation (#2166 / @ifedapoolarewaju)</li><li>@uppy/transloadit: fix progress with very different Assembly runtimes (#2143 / @agreene-coursera)</li><li>@uppy/core: Only <code>_startIfAutoProceed</code> if some files were actually added (#2146 / @arturi)</li><li>@uppy/companion: emit error to client if download fails (#2139 / @ifedapoolarewaju)</li><li>@uppy/companion: validate all client provided upload data. (#2160 / @ifedapoolarewaju)</li><li>@uppy/dashboard: Log warning instead of an error when trigger is not found (#2144 / @arturi)</li><li>@uppy/robodog: Pass <code>hideUploadButton</code> to Dashboard in Robodog too (#2169 / @arturi)</li><li>@uppy/aws-s3-multipart: emit <code>upload-error</code> when companion returns error during upload instantiation (#2168 / @ifedapoolarewaju)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Releases 1.11 through 1.13 introduced a bunch of major new features and bugfixes. Let‚Äôs go through the main ones!&lt;/p&gt;
&lt;h2 id=&quot;Dark-mode&quot;&gt;&lt;a href=&quot;#Dark-mode&quot; class=&quot;headerlink&quot; title=&quot;Dark mode&quot;&gt;&lt;/a&gt;Dark mode&lt;/h2&gt;&lt;p&gt;A little while ago we‚Äôve &lt;a href=&quot;https://mobile.twitter.com/uppy_io/status/1221070643543838721&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;announced work in progress&lt;/a&gt; on Dark Mode for the Dashboard. We‚Äôre happy to tell you it‚Äôs live now! You can try it out on &lt;a href=&quot;/examples/dashboard/&quot;&gt;the Dashboard example page&lt;/a&gt;.&lt;/p&gt;
&lt;video alt=&quot;Demo video showing Uppy Dark Mode&quot; muted=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot;&gt;
  &lt;source src=&quot;/images/blog/1.13/dark-mode-auto.webm&quot; type=&quot;video/webm&quot;&gt;
  &lt;source src=&quot;/images/blog/1.13/dark-mode-auto.mp4&quot; type=&quot;video/mp4&quot;&gt;
&lt;/video&gt;

&lt;p&gt;There are three options available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;light&lt;/code&gt; ‚Äî the default&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dark&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auto&lt;/code&gt; ‚Äî will respect the user‚Äôs system settings and switch automatically&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;uppy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token method function property-access&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token maybe-class-name&quot;&gt;Dashboard&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;dark&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.13/uppy-dashboard-dark-mar-2020.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.13/uppy-dashboard-dark-mar-2020.png" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.10.1: Facebook and OneDrive</title>
    <link href="https://uppy.io/blog/2020/04/1.10/"/>
    <id>https://uppy.io/blog/2020/04/1.10/</id>
    <published>2020-04-03T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy <code>1.10.1</code> adds long-awaited support for <a href="/docs/facebook/">Facebook</a> and <a href="/docs/onedrive/">OneDrive</a> üéâ</p><p><img src="/images/blog/1.10/uppy-facebook-onedrive.png" alt="Screenshot showing Uppy file uploader with Facebook and OneDrive options"></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token function"><span class="token maybe-class-name">Uppy</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Facebook</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token string">'https://companion.uppy.io/'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">OneDrive</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token literal-property property">companionUrl</span><span class="token operator">:</span> <span class="token string">'https://companion.uppy.io/'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Try the live demos on <a href="https://transloadit.com" target="_blank" rel="noopener">Transloadit.com</a>: import your files from Facebook or OneDrive, and then:</p><ul><li><a href="https://transloadit.com/demos/image-manipulation/text-watermarking/" target="_blank" rel="noopener">Apply a watermark to an image</a></li><li><a href="https://transloadit.com/demos/image-manipulation/convert-to-webp/" target="_blank" rel="noopener">Convert an image to WebP</a></li><li><a href="https://transloadit.com/demos/file-exporting/store-encoding-and-thumbnails-on-s3/" target="_blank" rel="noopener">Encode a video, extract 8 thumbnails and store everything in an S3 bucket</a></li><li><a href="https://transloadit.com/demos/video-encoding/encode-for-apple-iphone-11-pro-max/" target="_blank" rel="noopener">Encode video for iPhone</a></li><li><a href="https://transloadit.com/demos/file-compressing/create-one-zip-file-containing-all-uploaded-files/" target="_blank" rel="noopener">Create a single Zip file containing all uploaded files</a></li></ul><p>(Uppy demos are below the description and steps, under ‚ÄúLive Demo. See for yourself‚Äù ;-)</p><p>You can also play with an interactive demo, enabling different Uppy options and providers on the fly: <a href="https://uppy.io/examples/dashboard">https://uppy.io/examples/dashboard</a></p><p>OneDrive:</p><p><img src="/images/blog/1.10/uppy-onedrive.png" alt="Screenshot showing Uppy file uploader with OneDrive file list"></p><p>Facebook:</p><p><img src="/images/blog/1.10/uppy-facebook.png" alt="Screenshot showing Uppy file uploader with Facebook file list"></p><a id="more"></a><p>As with Dropbox and Instagram, using the Facebook and OneDrive integrations requires the client Plugins (see <a href="/docs/facebook/">here for Facebook</a> and see <a href="/docs/onedrive/">here for OneDrive</a>), and also your <a href="/docs/companion/#Options">Companion</a> integration.</p><p>This is an exciting release for us, and we can‚Äôt wait to get some feedback (GitHub issues and PRs) on this! :)</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/companion: pass <code>endpoint</code> and <code>region</code> to AWS SDK constructor (#2113 / @goto-bus-stop)</li><li>@uppy/companion: Allow S3 ACL to be specified in Companion Standalone (#2111 / @jasonbosco)</li><li>@uppy/companion: return 401 early if token is not set (#2118 / @ifedapoolarewaju)</li><li>@uppy/companion: allow providing any S3 option, closes #1388 (#2030 / @goto-bus-stop)</li><li>@uppy/companion:: don‚Äôt log redundant errors in production (#2112 / @ifedapoolarewaju)</li><li>docs: Add S3 ACL option to companion docs (#2109 / @jasonbosco)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy &lt;code&gt;1.10.1&lt;/code&gt; adds long-awaited support for &lt;a href=&quot;/docs/facebook/&quot;&gt;Facebook&lt;/a&gt; and &lt;a href=&quot;/docs/onedrive/&quot;&gt;OneDrive&lt;/a&gt; üéâ&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.10/uppy-facebook-onedrive.png&quot; alt=&quot;Screenshot showing Uppy file uploader with Facebook and OneDrive options&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; uppy &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;&lt;span class=&quot;token maybe-class-name&quot;&gt;Uppy&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
uppy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token method function property-access&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token maybe-class-name&quot;&gt;Dashboard&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
uppy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token method function property-access&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token maybe-class-name&quot;&gt;Facebook&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token maybe-class-name&quot;&gt;Dashboard&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;companionUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://companion.uppy.io/&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
uppy&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token method function property-access&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token maybe-class-name&quot;&gt;OneDrive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token maybe-class-name&quot;&gt;Dashboard&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;companionUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://companion.uppy.io/&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Try the live demos on &lt;a href=&quot;https://transloadit.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Transloadit.com&lt;/a&gt;: import your files from Facebook or OneDrive, and then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://transloadit.com/demos/image-manipulation/text-watermarking/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apply a watermark to an image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://transloadit.com/demos/image-manipulation/convert-to-webp/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Convert an image to WebP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://transloadit.com/demos/file-exporting/store-encoding-and-thumbnails-on-s3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Encode a video, extract 8 thumbnails and store everything in an S3 bucket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://transloadit.com/demos/video-encoding/encode-for-apple-iphone-11-pro-max/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Encode video for iPhone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://transloadit.com/demos/file-compressing/create-one-zip-file-containing-all-uploaded-files/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Create a single Zip file containing all uploaded files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Uppy demos are below the description and steps, under ‚ÄúLive Demo. See for yourself‚Äù ;-)&lt;/p&gt;
&lt;p&gt;You can also play with an interactive demo, enabling different Uppy options and providers on the fly: &lt;a href=&quot;https://uppy.io/examples/dashboard&quot;&gt;https://uppy.io/examples/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OneDrive:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.10/uppy-onedrive.png&quot; alt=&quot;Screenshot showing Uppy file uploader with OneDrive file list&quot;&gt;&lt;/p&gt;
&lt;p&gt;Facebook:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/1.10/uppy-facebook.png&quot; alt=&quot;Screenshot showing Uppy file uploader with Facebook file list&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.8 and 1.9: security, error handling and better types</title>
    <link href="https://uppy.io/blog/2020/03/1.9/"/>
    <id>https://uppy.io/blog/2020/03/1.9/</id>
    <published>2020-03-09T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.8, 1.9 and a few important security patches are out! Here are the highlights:</p><a id="more"></a><h2 id="Companion-security-patches-and-new-Instagram-API"><a href="#Companion-security-patches-and-new-Instagram-API" class="headerlink" title="Companion: security patches and new Instagram API"></a>Companion: security patches and new Instagram API</h2><ul><li>We released a patch to an SSRF vulnerability affecting <code>@uppy/companion</code> and the <code>@uppy/url</code> plugin. Many thanks to the parties involved in <a href="https://hackerone.com/reports/786956" target="_blank" rel="noopener">reporting and disclosing</a> this vulnerability to the Uppy team. The patch is available in <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#194" target="_blank" rel="noopener">@uppy/companion version 1.9.5</a>.</li><li>As the Instagram Legacy API will soon no longer be available, we have now added support for the new Instagram Graph API. As far as using this on <code>@uppy/companion</code> goes, not much has changed. The only difference is that you will now be retrieving your Instagram credentials from the <a href="https://developers.facebook.com/" target="_blank" rel="noopener">Facebook Developer Platform</a>, and no longer from the <a href="https://www.instagram.com/developer/" target="_blank" rel="noopener">Instagram Developer Platform</a>.</li></ul><h2 id="Error-handling"><a href="#Error-handling" class="headerlink" title="Error handling"></a>Error handling</h2><ul><li>We‚Äôve significantly improved error handling and retries in <code>@uppy/core</code>, <code>@uppy/transloadit</code> and <code>@uppy/dashboard</code>. The retry button on the Status Bar, which was broken in some edge cases, now works as expected.</li><li>Errors from Transloadit assemblies now include Assembly ID, as well as the full assembly object, for easier debugging.</li><li>You can now click on the question mark (?) icon on the Informer or Dashboard error message, and get a browser alert with error details ‚Äî much easier for the users to copy-paste the text this way. The Informer now also conveniently stays on screen, as long as you hover over the question mark.</li></ul><h2 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h2><p>The Dashboard plugin has gained new file type icons: for images ‚Äî useful before the preview is generated, or when there‚Äôs no preview at all, like with images from the Url plugin ‚Äî and for archives.</p><p><img src="/images/blog/1.9/file-type-icons.png" alt=""></p><h2 id="Types"><a href="#Types" class="headerlink" title="Types"></a>Types</h2><p>Our typings got a significant upgrade: plugin options can now be type-checked! In the past, we did have typings for plugin options, but the <code>uppy.use()</code> function had a fallback that would accept <em>any</em> object as options. If your plugin options were wrong, typescript would just use the fallback and not tell you about it!</p><p>Stricter typings normally mean that old code may no longer type-check. So, although this is a bugfix, you have to opt into the new types. In 2.0, the old way will be removed and only the strict types will be available.</p><p>You can opt in by specifying the <code>StrictTypes</code> type parameter to the <code>Uppy</code> type:</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="token keyword">import</span> Uppy <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/core'</span><span class="token punctuation">)</span><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Uppy</span><span class="token generic class-name"><span class="token operator">&lt;</span>Uppy<span class="token punctuation">.</span>StrictTypes<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token comment">// options here</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>This type parameter must also be specified if you are storing the <code>uppy</code> instance anywhere. For example, inside a class:</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="token keyword">class</span> <span class="token class-name">UppyProvider</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component <span class="token punctuation">{</span>  <span class="token keyword">private</span> uppy<span class="token operator">:</span> Uppy<span class="token operator">&lt;</span>Uppy<span class="token punctuation">.</span>StrictTypes<span class="token operator">></span>  <span class="token function">constructor</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>uppy <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Uppy</span><span class="token generic class-name"><span class="token operator">&lt;</span>Uppy<span class="token punctuation">.</span>StrictTypes<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token comment">// etc</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></pre></td></tr></table></figure><p>If you do not specify the <code>StrictTypes</code> parameter, the old fallback for the <code>uppy.use()</code> method remains available.</p><p>The typings for <code>@uppy/react</code> component props are now derived from plugin options types, so they will no longer get out of sync, as they occasionally did in the past. For example, in version 1.7, the <code>@uppy/drag-drop</code> plugin supported a <code>note</code> option to add some text to the drop area. The React typings didn‚Äôt include that option, so you couldn‚Äôt use it from typescript! That is now permanently fixed:</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="token keyword">import</span> components <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/react'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">{</span> DragDrop <span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token comment">// assuming some `uppy` variable already exists</span><span class="token keyword">declare</span> <span class="token keyword">var</span> uppy<span class="token operator">:</span> Uppy<span class="token operator">&lt;</span>Uppy<span class="token punctuation">.</span>StrictTypes<span class="token operator">></span><span class="token keyword">function</span> <span class="token function">MyComponent</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>DragDrop      uppy<span class="token operator">=</span><span class="token punctuation">{</span>uppy<span class="token punctuation">}</span>      note<span class="token operator">=</span><span class="token string">'This prop is now supported!'</span>    <span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span></pre></td></tr></table></figure><p>Finally, the <code>locale</code> options and React props now have full typings. Your editor should now be able to provide autocompletion for language keys!</p><p><img src="/images/blog/1.9/locale-type.png" alt="Screenshot showing VS Code autocompletion for a language key."></p><p>We now also use <code>tsd</code>, so our typings are actually tested.</p><p>See <a href="https://github.com/transloadit/uppy/pull/1918" target="_blank" rel="noopener">PR #1918</a> for all the details.</p><h2 id="Downloadable-ZIP-archives-of-Uppy-releases"><a href="#Downloadable-ZIP-archives-of-Uppy-releases" class="headerlink" title="Downloadable ZIP archives of Uppy releases"></a>Downloadable ZIP archives of Uppy releases</h2><p>Uppy is now available as a downloadable ZIP archive from the Transloadit CDN! NPM down? Don‚Äôt like build tools? Looking for a quick way to play around with Uppy? We‚Äôve got you covered:</p><pre><code>https://releases.transloadit.com/uppy/v1.9.3/uppy-v1.9.3.zip</code></pre><h2 id="Locales"><a href="#Locales" class="headerlink" title="Locales"></a>Locales</h2><ul><li>Uppy now speaks Korean and Vietnamese.</li><li>The French, German and Chinese (zh_TW) translations have been improved.</li></ul><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/core: core: setState(modifiedFiles) in onBeforeUpload (#2028 / @arturi)</li><li>@uppy/core: always log errors (#2029 / @arturi)</li><li>@uppy/core: fix mime type checking bug (#2004 / @shahimclt)</li><li>@uppy/core: add .tsv and .tab: text/tab-separated-values (#2056 / @arturi)</li><li>@uppy/onedrive: make encryption shorter + enable onedrive on website (#2034 / @ifedapoolarewaju)</li><li>@uppy/react: use <code>componentDidUpdate</code> instead of <code>componentWillReceiveProps</code> (@cryptic022, #1999)</li><li>@uppy/xhr-upload: free item from rate limit queue when upload times out (@rtaieb, #2018)</li><li>@uppy/aws-s3-multipart: add optional headers for signed url (@ardeois, #1985)</li><li>@uppy/aws-s3: fix crash when S3 response does not have a Content-Type header (@roenschg, #2012)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.8, 1.9 and a few important security patches are out! Here are the highlights:&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.7: A Small One</title>
    <link href="https://uppy.io/blog/2020/01/1.7/"/>
    <id>https://uppy.io/blog/2020/01/1.7/</id>
    <published>2020-01-10T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Uppy 1.7 was released last December! This release added Hebrew translations, a recording length timer for the <code>@uppy/webcam</code> plugin, and a collection of improvements to Companion.</p><a id="more"></a><h2 id="showRecordingLength-true"><a href="#showRecordingLength-true" class="headerlink" title="showRecordingLength: true"></a>showRecordingLength: true</h2><p>When recording audio or video using the <code>@uppy/webcam</code> plugin, this new option contributed by <a href="https://github.com/dominiceden" target="_blank" rel="noopener">@dominiceden</a> shows a timer in the bottom right, so your users can see how long they‚Äôve been recording for.</p><video alt="Demo video showing Uppy Webcam video recording timer" muted="" autoplay="" loop="">  <source src="/images/blog/1.7/cat-video-timer.webm" type="video/webm">  <source src="/images/blog/1.7/cat-video-timer.mp4" type="video/mp4"></video><h2 id="Companion"><a href="#Companion" class="headerlink" title="Companion"></a>Companion</h2><p>The past months we‚Äôve made some incremental improvements to Companion. We patched an issue where Companion could sometimes output remote provider authentication tokens into logs.</p><p>We now run Companion tests on Node.js 6 on each commit, in addition to Node.js 10, to make sure that we don‚Äôt break compatibility in a minor release. Node.js 6 support will be dropped in a future major release, and we recommend you upgrade soon if you are still using it.</p><p>Uploading files from remote providers with the <code>@uppy/aws-s3-multipart</code> plugin now uses the correct file name in your S3 bucket by default, instead of the temporary filename that Companion uses internally.</p><p>The <code>getKey()</code> option for S3 now has a <a href="https://uppy.io/docs/companion/#s3-getKey-req-filename-metadata"><code>metadata</code></a> parameter, so you can use file metadata from the client to determine the name of files in S3.</p><h2 id="Locales"><a href="#Locales" class="headerlink" title="Locales"></a>Locales</h2><p>The new Hebrew locale is available as:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/locales/lib/he_IL'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Thanks to <a href="https://github.com/YehudaKremer" target="_blank" rel="noopener">@YehudaKremer</a> for the contribution!</p><p>In 1.7, we also fixed the naming of the Galician locale. The locale names follow a <code>country_LANGUAGE</code> format. Previously, we used <code>es_GL</code> for Galician, which was intended to mean ‚ÄúGalician in Spain‚Äù, but which <em>actually</em> means ‚ÄúSpanish in Greenland‚Äù! The correct way to refer to Galician is as <code>gl_ES</code>:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/locales/lib/gl_ES'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>The old <code>es_GL</code> name is now an alias for <code>gl_ES</code>. It will be removed in a future major release, so we recommend updating your code if you were using the old name. If you do it now, the migration will be easier once 2.0 comes around :smile:</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/aws-s3: add some tests (@bambii7, #1934)</li><li>@uppy/companion: add onedrive domain validation for the demo deployment (@ifedapoolarewaju, #1959)</li><li>@uppy/companion: change demo deployment type to stable API (@kiloreux, #1938)</li><li>@uppy/companion: rename uppy occurrences to companion (@ifedapoolarewaju, #1926)</li><li>@uppy/companion: upgrade <code>helmet</code> (@goto-bus-stop, <a href="https://github.com/transloadit/uppy/commit/6b006ac42c20062c37bdcaf6a77e07b304da7957" target="_blank" rel="noopener">6b006ac</a>)</li><li>@uppy/core: make <code>uppy.on()</code> work better with IntelliSense (@bambii7, #1923)</li><li>@uppy/dashboard: hide top bar cancel button when <code>hideCancelButton: true</code> (@goto-bus-stop, #1955)</li><li>@uppy/thumbnail-generator: add webp to the list of supported types (@arturi, #1961)</li><li>@uppy/thumbnail-generator: vendor exif-js source in Uppy (@mskelton, #1940)</li><li>docs: FB and OneDrive are not yet in the CDN bundle (@goto-bus-stop, <a href="https://github.com/transloadit/uppy/commit/61b54b914dd437d2e60362c4ece1429943b32555" target="_blank" rel="noopener">61b54b9</a>)</li><li>docs: add <code>companionHeaders</code> to s3-multipart docs (@goto-bus-stop, <a href="https://github.com/transloadit/uppy/commit/a6e44a953114e385466dcce884d37e433f030549" target="_blank" rel="noopener">a6e44a9</a>)</li><li>docs: add reset-progress event to docs (@bambii7, #1922)</li><li>docs: make Robodog naming more consistent (@goto-bus-stop, #1935)</li><li>docs: make react sample code more standalone (@uxitten, #1864)</li><li>examples: remove <code>UPPYSERVER_</code> references (@goto-bus-stop, <a href="https://github.com/transloadit/uppy/commit/e74690e20cc0a1afd9156ce03b1ca6a5358cc7d9" target="_blank" rel="noopener">e74690e</a>)</li><li>website: add facebook to dashboard example (@ifedapoolarewaju, #1930)</li><li>website: add plugin versions (@arturi, #1952)</li><li>website: enable onedrive on the website example (@ifedapoolarewaju, #1975)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Uppy 1.7 was released last December! This release added Hebrew translations, a recording length timer for the &lt;code&gt;@uppy/webcam&lt;/code&gt; plugin, and a collection of improvements to Companion.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    <content src="https://uppy.io/https://uppy.io/images/blog/1.7/cat-video-screen.jpg" type="image" />
    
    
    
  </entry>
  
  <entry>
    <title>Uppy 1.6: setOptions(), Icelandic and Thai</title>
    <link href="https://uppy.io/blog/2019/11/1.6/"/>
    <id>https://uppy.io/blog/2019/11/1.6/</id>
    <published>2019-11-13T00:00:00.000Z</published>
    <updated>2023-03-08T00:04:40.017Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>This release adds a long-awaited <code>uppy.setOptions()</code> API, allowing you to update options of Uppy and its plugins on the fly. It also includes locales for the Icelandic and Thai languages!</p><a id="more"></a><h2 id="uppy-setOptions"><a href="#uppy-setOptions" class="headerlink" title="uppy.setOptions()"></a>uppy.setOptions()</h2><p><code>.setOptions()</code> for Uppy and its plugins supports most options that can be easily changed on the fly: <code>restrictions</code>, <code>locale</code>, Dashboard‚Äôs <code>note</code> and <code>metaFields</code>, <code>disableThumbnailGenerator</code>, <code>showProgressDetails</code>, etc.</p><p>‚ö†Ô∏è Note that some options like <code>target</code>, <code>limit</code> and <code>id</code> cannot be changed on the fly, as internal statefull things depend on them.</p><p>Here‚Äôs how the magic works:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> uppy <span class="token operator">=</span> <span class="token function"><span class="token maybe-class-name">Uppy</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token literal-property property">restrictions</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">maxNumberOfFiles</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">use</span><span class="token punctuation">(</span><span class="token maybe-class-name">Dashboard</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token literal-property property">note</span><span class="token operator">:</span> <span class="token string">'You can upload up to 3 files'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Now, based on some condition in our app, we want to allow more files:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token comment">// Updating Uppy options</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token literal-property property">restrictions</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">maxNumberOfFiles</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// Updating Dashboard options</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">getPlugin</span><span class="token punctuation">(</span><span class="token string">'Dashboard'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">note</span><span class="token operator">:</span> <span class="token string">'You can upload up to 5 files'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Say, later on, the user changed their locale and we would like to reflect that in Uppy:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="token keyword">const</span> fi_FI <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@uppy/locales/lib/fi_FI'</span><span class="token punctuation">)</span>uppy<span class="token punctuation">.</span><span class="token method function property-access">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token literal-property property">locale</span><span class="token operator">:</span> fi_FI<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>Now, Uppy will bark in Finnish! Hau, hau, hau!</p><p>Please see <a href="https://uppy.io/docs/uppy/#uppy-setOptions-opts"><code>uppy.setOptions()</code> docs</a> for details.</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><ul><li>@uppy/facebook: In the new Facebook plugin (beta), we now use grid view with big image previews for albums (@ifedapoolarewaju, #1886)</li><li>@uppy/companion: The thumbnail size has been increased for Dropbox (@ifedapoolarewaju, #1917)</li><li>@uppy/dashboard: The retry icons have been fixed on individual files (@goto-bus-stop, #1888)</li><li>@uppy/companion: Support <code>COMPANION_AWS_ENDPOINT</code> in aws-companion example so it can be used with other S3-compatible services (@goto-bus-stop, <a href="https://github.com/transloadit/uppy/commit/1ab63aa395859815871c4e1e62dda6e9ca66595f" target="_blank" rel="noopener">1ab63aa</a>)</li><li>@uppy/companion: Add S3 useAccelerateEndpoint option (@steverob, #1884)</li><li>@uppy/companion: only set <code>Access-Control-Allow-Credentials</code> header when origin is whitelisted (@ifedapoolarewaju, #1901)</li><li>@uppy/transloadit: We now send <code>Transloadit-Client</code> header with HTTP API requests (@goto-bus-stop, #1919)</li><li>@uppy/tus: Uploads are now being terminated when cancelling, instead of just pausing and letting them expire (@ifedapoolarewaju, #1909)</li><li>build: Updated Lerna, ESlint, and Jest (@goto-bus-stop)</li></ul><p>As always, you can find the full list of changes and package versions, as well as future plans, in our <a href="https://github.com/transloadit/uppy/blob/master/CHANGELOG.md" target="_blank" rel="noopener">changelog</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This release adds a long-awaited &lt;code&gt;uppy.setOptions()&lt;/code&gt; API, allowing you to update options of Uppy and its plugins on the fly. It also includes locales for the Icelandic and Thai languages!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
